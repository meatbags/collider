var Collider=function(t){function i(s){if(n[s])return n[s].exports;var o=n[s]={i:s,l:!1,exports:{}};return t[s].call(o.exports,o,o.exports,i),o.l=!0,o.exports}var n={};return i.m=t,i.c=n,i.d=function(t,n,s){i.o(t,n)||Object.defineProperty(t,n,{configurable:!1,enumerable:!0,get:s})},i.n=function(t){var n=t&&t.__esModule?function(){return t.default}:function(){return t};return i.d(n,"a",n),n},i.o=function(t,i){return Object.prototype.hasOwnProperty.call(t,i)},i.p="",i(i.s=3)}([function(t,i,n){"use strict";Object.defineProperty(i,"__esModule",{value:!0});var s={system:{},quadrants:{size:{x:100,y:100,z:100}},plane:{dotBuffer:.001,collisionThreshold:.5},sandbox:{physics:{gravity:20,maxVelocity:50,floor:-1,snapUp:1,snapDown:.5,minSlope:Math.PI/4},player:{height:2,position:{x:0,y:0,z:0},rotation:{pitch:0,yaw:Math.PI,roll:0,maxPitch:.25*Math.PI,minPitch:-.25*Math.PI},speed:{normal:8,slowed:4,rotation:.75*Math.PI,jump:12,fallTimerThreshold:.2}},camera:{fov:60,aspect:1,near:.1,far:1e4},adjust:{verySlow:.01,slow:.025,normal:.05,fast:.09,rapid:.12,veryFast:.2}}};i.default=s},function(t,i,n){"use strict";Object.defineProperty(i,"__esModule",{value:!0});var s=2*Math.PI,o=function(t){return new THREE.Vector3(t.x,t.y,t.z)},e=function(t,i){return new THREE.Vector3(t.x+i.x,t.y+i.y,t.z+i.z)},r=function(t,i){return new THREE.Vector3(t.x-i.x,t.y-i.y,t.z-i.z)},a=function(t){var i=Math.sqrt(t.x*t.x+t.y*t.y+t.z*t.z);return 0==i?t:new THREE.Vector3(t.x/i,t.y/i,t.z/i)},h=function(t){return t.x*=-1,t.y*=-1,t.z*=-1,t},l=function(t,i){return Math.sqrt(Math.pow(i.x-t.x,2)+Math.pow(i.y-t.y,2)+Math.pow(i.z-t.z,2))},c=function(t,i){return Math.sqrt(Math.pow(i.x-t.x,2)+Math.pow(i.z-t.z,2))},u=function(t,i){var n=c(t,i),s=i.y-t.y;return Math.atan2(s,n)},f=function(t,i){return new THREE.Vector3(t.x*i,t.y*i,t.z*i)},p=function(t,i){return t.x===i.x&&t.y===i.y&t.z===i.z},d=function(t,i){return new THREE.Vector3(t.y*i.z-t.z*i.y,t.z*i.x-t.x*i.z,t.x*i.y-t.y*i.x)},y=function(t,i){return Math.atan2(Math.sin(i-t),Math.cos(i-t))},m=function(t,i){return t.x*i.x+t.y*i.y+t.z*i.z};i.copyVector=o,i.isVectorEqual=p,i.pitchBetween=u,i.twoPi=s,i.distanceBetween=l,i.distanceBetween2D=c,i.minAngleDifference=y,i.dotProduct=m,i.addVector=e,i.subtractVector=r,i.scaleVector=f,i.crossProduct=d,i.reverseVector=h,i.normalise=a},function(t,i,n){"use strict";Object.defineProperty(i,"__esModule",{value:!0});var s=function(){this.cvs=document.createElement("canvas"),this.ctx=this.cvs.getContext("2d"),this.init()};s.prototype={init:function(){document.body.append(this.cvs),this.setStyle()},setStyle:function(){this.cvs.style.position="fixed",this.cvs.width=window.innerWidth,this.cvs.style.pointerEvents="none",this.cvs.height=400,this.cvs.style.zIndex=10,this.cvs.style.top=0,this.cvs.style.left=0},clear:function(){this.ctx.clearRect(0,0,this.cvs.width,this.cvs.height)},print:function(){this.clear();for(var t=0;t<arguments.length;t+=1)this.ctx.fillText(arguments[t],20,20+20*t)}},i.default=s},function(t,i,n){"use strict";function s(t){return t&&t.__esModule?t:{default:t}}Object.defineProperty(i,"__esModule",{value:!0}),i.Logger=i.Player=i.System=i.Mesh=void 0;var o=n(4),e=s(o),r=n(7),a=s(r),h=n(9),l=s(h),c=n(2),u=s(c);i.Mesh=e.default,i.System=a.default,i.Player=l.default,i.Logger=u.default},function(t,i,n){"use strict";function s(t){return t&&t.__esModule?t:{default:t}}Object.defineProperty(i,"__esModule",{value:!0});var o=n(0),e=(s(o),n(5)),r=s(e),a=n(6),h=s(a),l=n(1),c=function(t){if(this.isColliderMesh=!0,!t.geometry.isBufferGeometry)throw"Error: Input is not THREE.BufferGeometry";this.geometry=t.geometry,this.box=(new THREE.Box3).setFromBufferAttribute(t.geometry.attributes.position),this.min=this.box.min,this.max=this.box.max,this.planes=[],this.transform=new h.default(t),this.generatePlanes()};c.prototype={generatePlanes:function(){var t=this.geometry.attributes.position.array,i=this.geometry.attributes.normal.array;if(this.geometry.index)for(var n=this.geometry.index.array,s=this.geometry.attributes.position.itemSize,o=0;o<n.length;o+=3){var e=n[o]*s,a=n[o+1]*s,h=n[o+2]*s;this.planes.push(new r.default(new THREE.Vector3(t[e],t[e+1],t[e+2]),new THREE.Vector3(t[a],t[a+1],t[a+2]),new THREE.Vector3(t[h],t[h+1],t[h+2]),new THREE.Vector3(i[e],i[e+1],i[e+2]),new THREE.Vector3(i[a],i[a+1],i[a+2]),new THREE.Vector3(i[h],i[h+1],i[h+2])))}else for(var l=0;l<t.length;l+=9)this.planes.push(new r.default(new THREE.Vector3(t[l+0],t[l+1],t[l+2]),new THREE.Vector3(t[l+3],t[l+4],t[l+5]),new THREE.Vector3(t[l+6],t[l+7],t[l+8]),new THREE.Vector3(i[l+0],i[l+1],i[l+2]),new THREE.Vector3(i[l+3],i[l+4],i[l+5]),new THREE.Vector3(i[l+6],i[l+7],i[l+8])))},getCollision:function(t){if(this.transform.set(t),this.box.containsPoint(this.transform.point)){for(var i=0;i<this.planes.length;i+=1)this.planes[i].culled=!1;for(var n=0;n<this.planes.length;n+=1)if(!this.planes[n].culled&&this.planes[n].isPointBelowOrEqual(this.transform.point))for(var s=0;s<this.planes.length;s+=1)!this.planes[s].culled&&s!=n&&this.planes[n].isPlaneAbove(this.planes[s])&&(this.planes[s].culled=!0);for(var o=0;o<this.planes.length;o+=1)if(!this.planes[o].culled&&!this.planes[o].isPointBelowOrEqual(this.transform.point))return!1;return!0}return!1},getCollision2D:function(t){return this.transform.set(t),this.transform.point.x>=this.min.x&&this.transform.point.x<=this.max.x&&this.transform.point.z>=this.min.z&&this.transform.point.z<=this.max.z},getCeiling2D:function(t){this.transform.set(t);for(var i=null,n=0;n<this.planes.length;n+=1)if(this.planes[n].containsPoint2D(this.transform.point)){var s=plane.getY(this.transform.point.x,this.transform.point.z);(null===i||s>i)&&(i=s)}return null==i?null:this.transform.reverseY(i)},getCeiling:function(t){this.transform.set(t);for(var i=null,n=0;n<this.planes.length;n+=1)if(this.planes[n].containsPoint2D(this.transform.point)&&this.planes[n].isPointBelowOrEqual(this.transform.point)){var s=plane.getY(this.transform.point.x,this.transform.point.z);s>=this.transform.point.y&&(null===i||s<i)&&(i=s)}return null==i?null:this.transform.reverseY(i)},getCeilingPlane:function(t){this.transform.set(t);for(var i=null,n=null,s=0;s<this.planes.length;s+=1)if(this.planes[s].containsPoint2D(this.transform.point)&&this.planes[s].isPointBelowOrEqual(this.transform.point)){var o=this.planes[s].getY(this.transform.point.x,this.transform.point.z);null!=o&&o>=this.transform.point.y&&(null==n||o>n)&&(n=o,i=this.planes[s])}return null==n?null:{y:this.transform.reverseY(n),plane:i}},getIntersectPlane:function(t,i){for(var n=this.transform.getTransformedPoint(t),s=this.transform.getTransformedPoint(i),o=(new THREE.Box3).setFromPoints([n,s]),e=null,r=0;r<this.planes.length;r+=1)if(this.planes[r].intersectsBox(o)||this.planes[r].containsBox(o)){var a=this.planes[r].getIntersect(n,s);if(null!=a){var h=(0,l.distanceBetween)(n,a);(null===e||h<e.distance)&&(e={intersect:a,plane:this.planes[r],distance:h})}}return null==e?null:{intersect:this.transform.reverse(e.intersect),plane:e.plane,distance:e.distance}},getIntersectPlane2D:function(t,i){for(var n=this.transform.getTransformedPoint(t),s=this.transform.getTransformedPoint(i),o=(new THREE.Box3).setFromPoints([n,s]),e=null,r=0;r<this.planes.length;r+=1)if(this.planes[r].intersectsBox(o)||this.planes[r].containsBox(o)){var a=this.planes[r].getNormalIntersect2D(s);if(null!=a){var h=(0,l.distanceBetween)(s,a);(null===e||h<e.distance)&&(e={plane:this.planes[r],intersect:a,distance:h})}}return null==e?null:{intersect:this.transform.reverse(e.intersect),plane:e.plane,distance:e.distance}}},i.default=c},function(t,i,n){"use strict";Object.defineProperty(i,"__esModule",{value:!0});var s=n(1),o=function(t){if(t&&t.__esModule)return t;var i={};if(null!=t)for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(i[n]=t[n]);return i.default=t,i}(s),e=n(0),r=function(t){return t&&t.__esModule?t:{default:t}}(e),a=function(t,i,n,s,o,e){this.p1=t,this.p2=i,this.p3=n,this.n1=s,this.n2=o,this.n3=e,this.culled=!1,this.generatePlane()};a.prototype={generatePlane:function(){var t=o.subtractVector(this.p2,this.p1),i=o.subtractVector(this.p3,this.p1);this.normal=o.normalise(o.crossProduct(t,i)),this.normalXZ=new THREE.Vector3(this.normal.x,0,this.normal.z),o.dotProduct(this.normal,this.n1)<0&&(this.normal=o.reverseVector(this.normal)),this.position=new THREE.Vector3((this.p1.x+this.p2.x+this.p3.x)/3,(this.p1.y+this.p2.y+this.p3.y)/3,(this.p1.z+this.p2.z+this.p3.z)/3),this.D=-this.normal.x*this.position.x-this.normal.y*this.position.y-this.normal.z*this.position.z,this.box=(new THREE.Box3).setFromPoints([this.p1,this.p2,this.p3]),this.boxExpanded=(new THREE.Box3).setFromPoints([this.p1,this.p2,this.p3]).expandByScalar(r.default.plane.surfaceCollisionThreshold)},isPointAbove:function(t){var i=o.subtractVector(t,this.position);return o.dotProduct(i,this.normal)>0},isPointBelow:function(t){var i=o.subtractVector(t,this.position);return o.dotProduct(i,this.normal)<0},isPointAboveOrEqual:function(t){var i=o.subtractVector(t,this.position);return o.dotProduct(i,this.normal)>=-r.default.plane.dotBuffer},isPointBelowOrEqual:function(t){var i=o.subtractVector(t,this.position);return o.dotProduct(i,this.normal)<=r.default.plane.dotBuffer},isPointOnSurface:function(t){var i=o.subtractVector(t,this.position),n=o.dotProduct(i,this.normal);return n<=r.default.plane.dotBuffer&&n>=-r.default.plane.dotBuffer},isPlaneAbove:function(t){return this.isPointAboveOrEqual(t.p1)&&this.isPointAboveOrEqual(t.p2)&&this.isPointAboveOrEqual(t.p3)},containsPoint:function(t){return this.box.containsPoint(t)},containsBox:function(t){return this.box.containsBox(t)},intersectsBox:function(t){return this.box.intersectsBox(t)},containsPoint2D:function(t){return this.box.containsPoint(new THREE.Vector3(t.x,this.position.y,t.z))},containsPointThreshold:function(t){return this.boxExpanded.containsPoint(t)},distanceToPlane:function(t){return Math.abs(this.normal.x*t.x+this.normal.y*t.y+this.normal.z*t.z+this.D)},getIntersect:function(t,i){var n=o.subtractVector(i,t),s=o.dotProduct(this.normal,o.normalise(n));if(Math.abs(s)<=r.default.plane.dotBuffer)return null;var e=this.normal.x*t.x+this.normal.y*t.y+this.normal.z*t.z+this.D,a=this.normal.x*n.x+this.normal.y*n.y+this.normal.z*n.z;if(0==a)return null;var h=t.x-n.x*e/a,l=t.y-n.y*e/a,c=t.z-n.z*e/a,u=new THREE.Vector3(h,l,c);if(this.containsPoint(u)){if((new THREE.Box3).setFromPoints([i,t]).expandByScalar(.05).containsPoint(u))return u}return null},getNormalIntersect:function(t){var i=o.addVector(t,this.normal),n=o.subtractVector(i,t),s=this.normal.x*t.x+this.normal.y*t.y+this.normal.z*t.z+this.D,e=this.normal.x*n.x+this.normal.y*n.y+this.normal.z*n.z,r=t.x-n.x*s/e,a=t.y-n.y*s/e,h=t.z-n.z*s/e;return new THREE.Vector3(r,a,h)},getNormalIntersect2D:function(t){var i=this.normal.x*t.x+this.normal.y*t.y+this.normal.z*t.z+this.D,n=this.normal.x*this.normal.x+this.normal.z*this.normal.z;return 0==n?null:new THREE.Vector3(t.x-this.normal.x*i/n,t.y,t.z-this.normal.z*i/n)},getY:function(t,i){return 0!=this.normal.y?(this.normal.x*t+this.normal.z*i+this.D)/-this.normal.y:null},getPerpendicularNormals:function(){return{right:new THREE.Vector3(-this.normal.z,0,this.normal.x),left:new THREE.Vector3(this.normal.z,0,-this.normal.x)}}},i.default=a},function(t,i,n){"use strict";Object.defineProperty(i,"__esModule",{value:!0});var s=function(t){this.point=new THREE.Vector3,this.position=t.position,this.rotation=t.rotation,this.scale=t.scale};s.prototype={set:function(t){this.point.x=t.x-this.position.x,this.point.y=t.y-this.position.y,this.point.z=t.z-this.position.z},getTransformedPoint:function(t){return{x:t.x-this.position.x,y:t.y-this.position.y,z:t.z-this.position.z}},reverseY:function(t){return t+this.position.y},reverse:function(t){return{x:t.x+this.position.x,y:t.y+this.position.y,z:t.z+this.position.z}}},i.default=s},function(t,i,n){"use strict";function s(t){return t&&t.__esModule?t:{default:t}}Object.defineProperty(i,"__esModule",{value:!0});var o=n(0),e=(s(o),n(8)),r=s(e),a=function(){this.quadrants=new r.default,this.isColliderSystem=!0};a.prototype={add:function(){for(var t=0;t<arguments.length;t+=1){var i=arguments[t];if(!i.isColliderMesh)throw"Error: Input must be Collider.Mesh";this.quadrants.add(i)}},getCollision:function(t){for(var i=!1,n=this.quadrants.getQuadrantMeshes(t),s=0;s<n.length;s+=1)if(n[s].getCollision(t)){i=!0;break}return i},getCollisionMeshes:function(t){for(var i=[],n=this.quadrants.getQuadrantMeshes(t),s=0;s<n.length;s+=1)n[s].getCollision(t)&&i.push(n[s]);return i},getCeiling2D:function(t){for(var i=null,n=this.quadrants.getQuadrantMeshes(t),s=0;s<n.length;s+=1)if(n[s].getCollision2D(t)){var o=mesh.getCeiling2D(t);(null===i||o>i)&&(i=o)}return i},getCeilingPlane:function(t){for(var i=null,n=null,s=this.quadrants.getQuadrantMeshes(t),o=0;o<s.length;o+=1)if(s[o].getCollision(t)){var e=s[o].getCeilingPlane(t);(null===i||null!=e.y&&e.y>i)&&(i=e.y,n=e.plane)}return null==i?null:{y:i,plane:n}}},i.default=a},function(t,i,n){"use strict";Object.defineProperty(i,"__esModule",{value:!0});var s=n(0),o=function(t){return t&&t.__esModule?t:{default:t}}(s),e=function(){this.q=[]};e.prototype={positionToQuadrant:function(t){return{x:Math.floor(t.x/o.default.quadrants.size.x),y:Math.floor(t.y/o.default.quadrants.size.y),z:Math.floor(t.z/o.default.quadrants.size.z)}},add:function(t){for(var i=this.positionToQuadrant(t.min),n=this.positionToQuadrant(t.max),s=i.x;s<=n.x;s+=1)for(var o=i.y;o<=n.y;o+=1)for(var e=i.z;e<=n.z;e+=1)this.addToQuadrant(s,o,e,t)},addToQuadrant:function(t,i,n,s){this.q[t]||(this.q[t]=[]),this.q[t][i]||(this.q[t][i]=[]),this.q[t][i][n]||(this.q[t][i][n]=[]),this.q[t][i][n].push(s)},getQuadrantMeshes:function(t){var i=this.positionToQuadrant(t);return this.q[i.x]&&this.q[i.x][i.y]&&this.q[i.x][i.y][i.z]?this.q[i.x][i.y][i.z]:[]}},i.default=e},function(t,i,n){"use strict";function s(t){return t&&t.__esModule?t:{default:t}}Object.defineProperty(i,"__esModule",{value:!0});var o=n(1),e=function(t){if(t&&t.__esModule)return t;var i={};if(null!=t)for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(i[n]=t[n]);return i.default=t,i}(o),r=n(10),a=s(r),h=n(0),l=s(h),c=function(t){this.domElement=t,this.config=l.default.sandbox.player,this.config.adjust=l.default.sandbox.adjust,this.config.physics=l.default.sandbox.physics,this.position=new THREE.Vector3(this.config.position.x,this.config.position.y,this.config.position.z),this.rotation={pitch:this.config.rotation.pitch,yaw:this.config.rotation.yaw,roll:this.config.rotation.roll},this.motion=new THREE.Vector3(0,0,0),this.offset={rotation:{pitch:0,yaw:0,roll:0}},this.target={position:new THREE.Vector3(this.config.position.x,this.config.position.y,this.config.position.z),rotation:{pitch:this.config.rotation.pitch,yaw:this.config.rotation.yaw,roll:this.config.rotation.roll},motion:new THREE.Vector3(0,0,0),offset:{rotation:{pitch:0,yaw:0,roll:0}}},this.falling=!1,this.fallTimer=0,this.camera=new THREE.PerspectiveCamera(l.default.sandbox.camera.fov,l.default.sandbox.camera.aspect,l.default.sandbox.camera.near,l.default.sandbox.camera.far),this.camera.up=new THREE.Vector3(0,1,0),this.object=new THREE.Group,this.interaction=new a.default(this.target.position,this.motion),this.init()};c.prototype={init:function(){this.bindControls(),this.resizeCamera()},update:function(t,i){this.handleInput(t),this.interaction.computeNextPosition(t,i),this.move()},handleInput:function(t){if(this.keys.left||this.keys.right){var i=(this.keys.left?1:0)+(this.keys.right?-1:0);this.target.rotation.yaw+=this.config.speed.rotation*t*i}if(this.keys.up||this.keys.down){var n=(this.keys.up?1:0)+(this.keys.down?-1:0),s=this.rotation.yaw+this.offset.rotation.yaw,o=Math.sin(s)*this.config.speed.normal*n,e=Math.cos(s)*this.config.speed.normal*n;this.target.motion.x=o,this.target.motion.z=e}else this.target.motion.x=0,this.target.motion.z=0;this.keys.jump&&(this.keys.jump=!1,(0==this.motion.y||this.fallTimer<this.config.speed.fallTimerThreshold)&&(this.motion.y=this.config.speed.jump)),this.falling=0!=this.motion.y,this.fallTimer=this.falling?this.fallTimer+t:0,this.falling?(this.motion.x+=(this.target.motion.x-this.motion.x)*this.config.adjust.slow,this.motion.z+=(this.target.motion.z-this.motion.z)*this.config.adjust.slow):(this.motion.x=this.target.motion.x,this.motion.z=this.target.motion.z)},move:function(){this.position.x+=(this.target.position.x-this.position.x)*this.config.adjust.veryFast,this.position.y+=(this.target.position.y-this.position.y)*this.config.adjust.rapid,this.position.z+=(this.target.position.z-this.position.z)*this.config.adjust.veryFast,this.rotation.yaw+=e.minAngleDifference(this.rotation.yaw,this.target.rotation.yaw)*this.config.adjust.fast,this.offset.rotation.yaw+=(this.target.offset.rotation.yaw-this.offset.rotation.yaw)*this.config.adjust.normal,this.rotation.yaw+=this.rotation.yaw<0?e.twoPi:this.rotation.yaw>e.twoPi?-e.twoPi:0,this.rotation.pitch+=(this.target.rotation.pitch-this.rotation.pitch)*this.config.adjust.normal,this.offset.rotation.pitch+=(this.target.offset.rotation.pitch-this.offset.rotation.pitch)*this.config.adjust.normal,this.rotation.roll+=(this.target.rotation.roll-this.rotation.roll)*this.config.adjust.fast;var t=this.rotation.pitch+this.offset.rotation.pitch,i=this.rotation.yaw+this.offset.rotation.yaw,n=this.position.y+this.config.height;this.camera.up.z=-Math.sin(this.rotation.yaw)*this.rotation.roll,this.camera.up.x=Math.cos(this.rotation.yaw)*this.rotation.roll,this.camera.position.set(this.position.x,n,this.position.z),this.camera.lookAt(new THREE.Vector3(this.position.x+Math.sin(i),n+Math.sin(t),this.position.z+Math.cos(i))),this.object.position.set(this.position.x,this.position.y,this.position.z)},handleKeyDown:function(t){switch(t.keyCode){case 38:case 87:this.keys.up=!0;break;case 37:case 65:this.keys.left=!0;break;case 40:case 83:this.keys.down=!0;break;case 39:case 68:this.keys.right=!0;break;case 32:this.keys.jump=!0}},handleKeyUp:function(t){switch(t.keyCode){case 38:case 87:this.keys.up=!1;break;case 37:case 65:this.keys.left=!1;break;case 40:case 83:this.keys.down=!1;break;case 39:case 68:this.keys.right=!1}},handleMouseDown:function(t){if(!this.mouse.locked){var i=this.domElement.getBoundingClientRect();this.mouse.active=!0,this.mouse.rotation.pitch=this.rotation.pitch,this.mouse.rotation.yaw=this.rotation.yaw,this.mouse.start.x=t.clientX/this.domElement.width*2-1,this.mouse.start.y=(t.clientY-i.y)/this.domElement.height*2-1}},handleMouseMove:function(t){if(this.mouse.active&&!this.keys.left&&!this.keys.right){var i=this.domElement.getBoundingClientRect();this.mouse.x=t.clientX/this.domElement.width*2-1,this.mouse.y=(t.clientY-i.y)/this.domElement.height*2-1,this.mouse.delta.x=this.mouse.x-this.mouse.start.x,this.mouse.delta.y=this.mouse.y-this.mouse.start.y,this.target.rotation.yaw=this.mouse.rotation.yaw+this.mouse.delta.x;var n=this.mouse.rotation.pitch+this.mouse.delta.y;(n>this.config.rotation.maxPitch||n<this.config.rotation.minPitch)&&(n=Math.max(this.config.rotation.minPitch,Math.min(this.config.rotation.maxPitch,n)),this.mouse.start.y=this.mouse.y,this.mouse.rotation.pitch=n),this.target.rotation.pitch=n}},handleMouseUp:function(t){this.mouse.active=!1},resizeCamera:function(){var t=this.domElement.width,i=this.domElement.height;this.camera.aspect=t/i,this.camera.updateProjectionMatrix()},bindControls:function(){var t=this;t.keys={up:!1,down:!1,left:!1,right:!1,jump:!1},t.mouse={x:0,y:0,start:{x:0,y:0},delta:{x:0,y:0},rotation:{pitch:0,yaw:0},locked:!1,active:!1},t.domElement.addEventListener("click",function(t){},!1),t.domElement.addEventListener("mousedown",function(i){t.handleMouseDown(i)},!1),t.domElement.addEventListener("mousemove",function(i){t.handleMouseMove(i)},!1),t.domElement.addEventListener("mouseup",function(i){t.handleMouseUp(i)},!1),t.domElement.addEventListener("mouseleave",function(i){t.handleMouseUp(i)},!1),document.addEventListener("keydown",function(i){t.handleKeyDown(i)},!1),document.addEventListener("keyup",function(i){t.handleKeyUp(i)},!1)}},i.default=c},function(t,i,n){"use strict";function s(t){return t&&t.__esModule?t:{default:t}}Object.defineProperty(i,"__esModule",{value:!0});var o=n(0),e=s(o),r=n(1),a=function(t){if(t&&t.__esModule)return t;var i={};if(null!=t)for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(i[n]=t[n]);return i.default=t,i}(r),h=n(2),l=s(h),c=function(t,i){this.position=t,this.motion=i,this.config={},this.config.physics=e.default.sandbox.physics,this.logger=new l.default};c.prototype={applyPhysics:function(t){this.motion.y=Math.max(this.motion.y-this.config.physics.gravity*t,-this.config.physics.maxVelocity)},setPhysics:function(t){this.config.physics.gravity=t.gravity?t.gravity:this.config.physics.gravity,this.config.physics.floor=t.floor?t.floor:this.config.physics.floor,this.config.physics.snapUp=t.snapUp?t.snapUp:this.config.physics.snapUp,this.config.physics.snapDown=t.snapDown?t.snapDown:this.config.physics.snapDown},computeNextPosition:function(t,i){var n=a.addVector(this.position,a.scaleVector(this.motion,t)),s=i.getCollisionMeshes(n);if(this.applyPhysics(t),s.length>0)this.stepUpSlopes(n,s)&&(s=i.getCollisionMeshes(n)),this.testObstructions(n,s,i)&&(s=i.getCollisionMeshes(n),this.stepUpSlopes(n,s));else if(this.motion.y<0){var o=a.copyVector(n);o.y-=this.config.physics.snapDown;var e=i.getCeilingPlane(o);this.stepDownSlope(n,e)}this.logger.print(this.motion.y,s.length),this.position.x=n.x,this.position.y=n.y,this.position.z=n.z,this.position.y<this.config.physics.floor&&(this.motion.y=0,this.position.y=this.config.physics.floor)},testObstructions:function(t,i,n){for(var s=!1,o=!1,e=0;e<i.length;e+=1){var r=i[e].getCeilingPlane(t);if(null!=r&&(r.plane.normal.y<this.config.physics.minSlope||r.y-this.position.y>this.config.physics.snapUp)){s=i[e];break}}if(s){var h=(a.copyVector(t),s.getIntersectPlane2D(this.position,t));if(null!=h){t.x=h.intersect.x,t.z=h.intersect.z;var l=0;i=n.getCollisionMeshes(t);for(var c=0;c<i.length;c+=1){var u=i[c].getCeilingPlane(t);null!=u&&(u.plane.normal.y<this.config.physics.minSlope||u.y-this.position.y>this.config.physics.snapUp)&&(l+=1)}l>1?(t.x=this.position.x,t.z=this.position.z):o=!0}else t.x=this.position.x,t.z=this.position.z}return o},stepUpSlopes:function(t,i){for(var n=!1,s=0;s<i.length;s+=1){var o=i[s].getCeilingPlane(t);null!=o&&o.plane.normal.y>=this.config.physics.minSlope&&o.y-this.position.y<=this.config.physics.snapUp&&o.y>=t.y&&(n=!0,t.y=o.y,this.motion.y=0)}return n},stepDownSlope:function(t,i){var n=!1;return null!=i&&i.plane.normal.y>=this.config.physics.minSlope&&(t.y=i.y,this.motion.y=0,n=!0),n}},i.default=c}]);