var Collider=function(t){function e(s){if(i[s])return i[s].exports;var n=i[s]={i:s,l:!1,exports:{}};return t[s].call(n.exports,n,n.exports,e),n.l=!0,n.exports}var i={};return e.m=t,e.c=i,e.d=function(t,i,s){e.o(t,i)||Object.defineProperty(t,i,{configurable:!1,enumerable:!0,get:s})},e.n=function(t){var i=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(i,"a",i),i},e.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},e.p="",e(e.s=2)}([function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var s={system:{cacheSize:10},quadrants:{size:{x:50,y:10,z:50}},plane:{dotBuffer:1e-4}};e.default=s},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var s=2*Math.PI,n=function(t,e){return new THREE.Vector3(t.x+e.x,t.y+e.y,t.z+e.z)},o=function(t,e){return new THREE.Vector3(t.x-e.x,t.y-e.y,t.z-e.z)},r=function(t){var e=Math.sqrt(t.x*t.x+t.y*t.y+t.z*t.z);return 0==e?t:(t.x/=e,t.y/=e,t.z/=e,t)},a=function(t){return t.x*=-1,t.y*=-1,t.z*=-1,t},h=function(t,e){return Math.sqrt(Math.pow(e.x-t.x,2)+Math.pow(e.z-t.z,2))},c=function(t,e){var i=h(t,e),s=e.y-t.y;return Math.atan2(s,i)},u=function(t,e){return new THREE.Vector3(t.x*e,t.y*e,t.z*e)},l=function(t,e){return new THREE.Vector3(t.y*e.z-t.z*e.y,t.z*e.x-t.x*e.z,t.x*e.y-t.y*e.x)},f=function(t,e){return Math.atan2(Math.sin(e-t),Math.cos(e-t))},d=function(t,e){return t.x*e.x+t.y*e.y+t.z*e.z};e.pitchBetween=c,e.twoPi=s,e.distanceBetween2D=h,e.minAngleDifference=f,e.dotProduct=d,e.addVector=n,e.subtractVector=o,e.scaleVector=u,e.crossProduct=l,e.reverseVector=a,e.normalise=r},function(t,e,i){"use strict";function s(t){return t&&t.__esModule?t:{default:t}}Object.defineProperty(e,"__esModule",{value:!0}),e.Player=e.System=e.Mesh=void 0;var n=i(3),o=s(n),r=i(5),a=s(r),h=i(7),c=s(h);e.Mesh=o.default,e.System=a.default,e.Player=c.default},function(t,e,i){"use strict";function s(t){return t&&t.__esModule?t:{default:t}}Object.defineProperty(e,"__esModule",{value:!0});var n=i(0),o=(s(n),i(4)),r=s(o),a=function(t){if(this.isColliderMesh=!0,!t.isBufferGeometry)throw"Error: Input is not THREE.BufferGeometry";this.geometry=t,this.box=(new THREE.Box3).setFromBufferAttribute(t.attributes.position),this.min=this.box.min,this.max=this.box.max,this.planes=[],this.generatePlanes()};a.prototype={generatePlanes:function(){var t=this.geometry.attributes.position.array,e=this.geometry.attributes.normal.array;if(this.geometry.index)for(var i=this.geometry.index.array,s=this.geometry.attributes.position.itemSize,n=0;n<i.length;n+=3){var o=i[n]*s,a=i[n+1]*s,h=i[n+2]*s;this.planes.push(new r.default(new THREE.Vector3(t[o],t[o+1],t[o+2]),new THREE.Vector3(t[a],t[a+1],t[a+2]),new THREE.Vector3(t[h],t[h+1],t[h+2]),new THREE.Vector3(e[o],e[o+1],e[o+2]),new THREE.Vector3(e[a],e[a+1],e[a+2]),new THREE.Vector3(e[h],e[h+1],e[h+2])))}else for(var c=0;c<t.length;c+=9)this.planes.push(new r.default(new THREE.Vector3(t[c+0],t[c+1],t[c+2]),new THREE.Vector3(t[c+3],t[c+4],t[c+5]),new THREE.Vector3(t[c+6],t[c+7],t[c+8]),new THREE.Vector3(e[c+0],e[c+1],e[c+2]),new THREE.Vector3(e[c+3],e[c+4],e[c+5]),new THREE.Vector3(e[c+6],e[c+7],e[c+8])))},collision:function(t){if(this.box.containsPoint(t)){for(var e=0;e<this.planes.length;e+=1)this.planes[e].culled=!1;for(var i=0;i<this.planes.length;i+=1)if(!this.planes[i].culled&&this.planes[i].isPointBelowOrEqual(t))for(var s=0;s<this.planes.length;s+=1)!this.planes[s].culled&&s!=i&&this.planes[i].isPlaneAbove(this.planes[s])&&(this.planes[s].culled=!0);for(var n=0;n<this.planes.length;n+=1)if(!this.planes[n].culled&&!this.planes[n].isPointBelowOrEqual(t))return!1;return!0}return!1},ceiling:function(t){for(var e=null,i=0;i<this.planes.length;i+=1){var s=this.planes[i];if(s.containsPointXZ(t)&&s.isPointBelowOrEqual(t)){var n=s.getY(t.x,t.z);n>=t.y&&(null===e||n<e)&&(e=n)}}return e},intersect:function(t,e){for(var i=null,s=0;s<this.planes.length;s+=1){var n=this.planes[s].intersect(t,e);null!=n&&(i=n)}return i}},e.default=a},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var s=i(1),n=function(t){if(t&&t.__esModule)return t;var e={};if(null!=t)for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i]);return e.default=t,e}(s),o=i(0),r=function(t){return t&&t.__esModule?t:{default:t}}(o),a=function(t,e,i,s,n,o){this.p1=t,this.p2=e,this.p3=i,this.n1=s,this.n2=n,this.n3=o,this.culled=!1,this.generatePlane()};a.prototype={generatePlane:function(){var t=n.subtractVector(this.p2,this.p1),e=n.subtractVector(this.p3,this.p1);this.normal=n.normalise(n.crossProduct(t,e)),n.dotProduct(this.normal,this.n1)<0&&(this.normal=n.reverseVector(this.normal)),this.position=new THREE.Vector3((this.p1.x+this.p2.x+this.p3.x)/3,(this.p1.y+this.p2.y+this.p3.y)/3,(this.p1.z+this.p2.z+this.p3.z)/3),this.e1=n.scaleVector(n.addVector(this.p1,this.p2),.5),this.e2=n.scaleVector(n.addVector(this.p2,this.p3),.5),this.e3=n.scaleVector(n.addVector(this.p3,this.p1),.5),this.e1n=n.subtractVector(this.e1,this.position),this.e2n=n.subtractVector(this.e2,this.position),this.e3n=n.subtractVector(this.e3,this.position),this.e1.y=this.e2.y=this.e3.y=0,this.e1n.y=this.e2n.y=this.e3n.y=0,this.D=-this.normal.x*this.position.x-this.normal.y*this.position.y-this.normal.z*this.position.z,this.box=(new THREE.Box3).setFromPoints([this.p1,this.p2,this.p3])},isPointAbove:function(t){var e=n.subtractVector(t,this.position);return n.dotProduct(e,this.normal)>0},isPointBelow:function(t){var e=n.subtractVector(t,this.position);return n.dotProduct(e,this.normal)<0},isPointAboveOrEqual:function(t){var e=n.subtractVector(t,this.position);return n.dotProduct(e,this.normal)>=-r.default.plane.dotBuffer},isPointBelowOrEqual:function(t){var e=n.subtractVector(t,this.position);return n.dotProduct(e,this.normal)<=r.default.plane.dotBuffer},isPlaneAbove:function(t){return this.isPointAboveOrEqual(t.p1)&&this.isPointAboveOrEqual(t.p2)&&this.isPointAboveOrEqual(t.p3)},containsPoint:function(t){return this.box.containsPoint(t)},containsPointXZ:function(t){return this.box.containsPoint(new THREE.Vector3(t.x,this.position.y,t.z))},intersect:function(t,e){var i=n.subtractVector(e,t);if(0==n.dotProduct(this.normal,n.normalise(i)))return null;var s=this.normal.x*t.x+this.normal.y*t.y+this.normal.z*t.z+this.D,o=this.normal.x*i.x+this.normal.y*i.y+this.normal.z*i.z;if(0==o)return null;var r=t.x-i.x*s/o,a=t.y-i.y*s/o,h=t.z-i.z*s/o,c=new THREE.Vector3(r,a,h);if(this.containsPoint(c)){if((new THREE.Box3).setFromPoints([t,e]).containsPoint(c))return c}return null},getY:function(t,e){return(this.normal.x*t+this.normal.z*e+this.D)/-this.normal.y}},e.default=a},function(t,e,i){"use strict";function s(t){return t&&t.__esModule?t:{default:t}}Object.defineProperty(e,"__esModule",{value:!0});var n=i(0),o=s(n),r=i(6),a=s(r),h=function(){this.quadrants=new a.default,this.cache={mesh:[],ceiling:[],floor:[],intersect:[]},this.isColliderSystem=!0,this.init()};h.prototype={init:function(){this.devCvs=document.getElementById("canvas"),this.devCtx=this.devCvs.getContext("2d")},add:function(){for(var t=0;t<arguments.length;t+=1){var e=arguments[t];if(!e.isColliderMesh)throw"Error: Input must be Collider.Mesh";this.quadrants.add(e)}},collision:function(t){if(this.isCached(t,this.cache.mesh))return!0;for(var e=!1,i=this.quadrants.getQuadrant(t),s=0;s<i.length;s+=1){var n=i[s];if(n.collision(t)){e=!0,this.cacheItem(this.cache.mesh,t,n);break}}return e},ceiling:function(t){if(this.isCached(t,this.cache.ceiling))return this.cache.ceiling[0].item;for(var e=this.quadrants.getQuadrant(t),i=null,s=0;s<e.length;s+=1){var n=e[s];if(n.collision(t)){var o=n.ceiling(t);(null===i||o>i)&&(i=o)}}return this.cacheItem(this.cache.ceiling,t,i),i},intersect:function(t,e){if(this.isCached(t,this.cache.intersect)){var i=this.cache.intersect[0];if(e.x===i.item.to.x&&e.y===i.item.to.y&&e.z===i.item.to.z)return i.item.intersect}if(this.isCached(t,this.cache.mesh)||this.isCached(e,this.cache.mesh)){var s=this.cache.mesh[0].getIntersect(t,e);return this.cacheItem(this.cache.intersect,t,{to:e,intersect:s}),s}for(var n=this.quadrants.getQuadrant(e),o=null,r=0;r<n.length;r+=1){var a=n[r];if(a.collision(e)){var h=a.intersect(t,e);null!=h&&(o=h)}}return this.cacheItem(this.cache.intersect,t,{to:e,intersect:o}),o},countCollisions:function(t){for(var e=0,i=this.quadrants.getQuadrant(t),s=0;s<i.length;s+=1){i[s].collision(t)&&(e+=1)}return e},cacheItem:function(t,e,i){t.unshift({point:new THREE.Vector3(e.x,e.y,e.z),item:i}),t.length>o.default.system.cacheSize&&t.splice(t.length-1,1)},isCached:function(t,e){return e.length>0&&t.x===e[0].point.x&&t.y===e[0].point.y&&t.z===e[0].point.z}},e.default=h},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var s=i(0),n=function(t){return t&&t.__esModule?t:{default:t}}(s),o=function(){this.q=[]};o.prototype={positionToQuadrant:function(t){return{x:Math.floor(t.x/n.default.quadrants.size.x),y:Math.floor(t.y/n.default.quadrants.size.y),z:Math.floor(t.z/n.default.quadrants.size.z)}},add:function(t){for(var e=this.positionToQuadrant(t.min),i=this.positionToQuadrant(t.max),s=e.x;s<=i.x;s+=1)for(var n=e.y;n<=i.y;n+=1)for(var o=e.z;o<=i.z;o+=1)this.addToQuadrant(s,n,o,t)},addToQuadrant:function(t,e,i,s){this.q[t]||(this.q[t]=[]),this.q[t][e]||(this.q[t][e]=[]),this.q[t][e][i]||(this.q[t][e][i]=[]),this.q[t][e][i].push(s)},getQuadrant:function(t){var e=this.positionToQuadrant(t);return this.q[e.x]&&this.q[e.x][e.y]&&this.q[e.x][e.y][e.z]?this.q[e.x][e.y][e.z]:[]}},e.default=o},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var s=i(1),n=function(t){this.domElement=t,this.position=new THREE.Vector3(0,0,0),this.movement=new THREE.Vector3(0,0,0),this.rotation=new THREE.Vector3(0,Math.PI,0),this.offset={rotation:new THREE.Vector3(0,0,0)},this.target={position:new THREE.Vector3(0,0,0),movement:new THREE.Vector3(0,0,0),rotation:new THREE.Vector3(0,Math.PI,0),offset:{rotation:new THREE.Vector3(0,0,0)}},this.attributes={speed:8,height:1.8,climb:1,rotation:.75*Math.PI,fov:58,cameraThreshold:.4,maxRotationOffset:.3*Math.PI,adjust:.05,adjustFast:.09,adjustInstant:.2,climbUpThreshold:1.5,climbDownThreshold:.5,gravity:{accel:10,maxVelocity:50,jumpVelocity:4.8}},this.camera=new THREE.PerspectiveCamera(this.attributes.fov,1,.1,1e4),this.camera.up=new THREE.Vector3(0,1,0),this.init()};n.prototype={init:function(){this.bindControls(),this.resizeCamera()},resizeCamera:function(){var t=this.domElement.width,e=this.domElement.height;this.camera.aspect=t/e,this.camera.updateProjectionMatrix()},bindControls:function(){var t=this;t.domElement.addEventListener("mousemove",function(e){t.handleMouseMove(e)},!1),t.domElement.addEventListener("mousedown",function(e){t.handleMouseDown(e)},!1),t.keys={up:!1,down:!1,left:!1,right:!1,jump:!1},document.addEventListener("keydown",function(e){t.handleKeyDown(e)},!1),document.addEventListener("keyup",function(e){t.handleKeyUp(e)},!1)},update:function(t,e){if(0==this.movement.y)if(this.keys.up||this.keys.down){var i=(this.keys.up?1:0)+(this.keys.down?-1:0),n=Math.sin(this.rotation.y)*this.attributes.speed*i,o=Math.cos(this.rotation.y)*this.attributes.speed*i;this.movement.x=n,this.movement.z=o}else this.movement.x=0,this.movement.z=0;this.keys.jump&&(this.keys.jump=!1,0==this.movement.y&&(this.movement.y=this.attributes.gravity.jumpVelocity));var r=(0,s.addVector)(this.target.position,(0,s.scaleVector)(this.movement,t));if(e.collision(r)?(r.y=e.ceiling(r),r.y-this.target.position.y>this.attributes.climbUpThreshold&&(r.x=this.target.position.x,r.y=this.target.position.y,r.z=this.target.position.z),this.movement.y=0):(r.y-=this.attributes.climbDownThreshold,0==this.movement.y&&e.collision(r)?r.y=e.ceiling(r):(this.movement.y-=this.attributes.gravity.accel*t,this.movement.y=Math.max(this.movement.y,-this.attributes.gravity.maxVelocity),r.y=this.target.position.y+this.movement.y*t)),this.target.position.x=r.x,this.target.position.y=r.y,this.target.position.z=r.z,this.position.x+=(this.target.position.x-this.position.x)*this.attributes.adjustInstant,this.position.y+=(this.target.position.y-this.position.y)*this.attributes.adjustInstant,this.position.z+=(this.target.position.z-this.position.z)*this.attributes.adjustInstant,this.keys.left||this.keys.right){var a=(this.keys.left?1:0)+(this.keys.right?-1:0);this.target.rotation.y+=this.attributes.rotation*t*a}this.rotation.y+=(0,s.minAngleDifference)(this.rotation.y,this.target.rotation.y)*this.attributes.adjustFast,this.offset.rotation.x+=(this.target.offset.rotation.x-this.offset.rotation.x)*this.attributes.adjust,this.offset.rotation.y+=(this.target.offset.rotation.y-this.offset.rotation.y)*this.attributes.adjust,this.rotation.y+=this.rotation.y<0?s.twoPi:this.rotation.y>s.twoPi?-s.twoPi:0;var h=this.rotation.y+this.offset.rotation.y,c=this.rotation.x+this.offset.rotation.x,u=this.position.y+this.attributes.height;this.camera.position.set(this.position.x,u,this.position.z),this.camera.lookAt(new THREE.Vector3(this.position.x+Math.sin(h),u+Math.sin(c),this.position.z+Math.cos(h)))},handleKeyDown:function(t){switch(t.keyCode){case 38:case 87:this.keys.up=!0;break;case 37:case 65:this.keys.left=!0;break;case 40:case 83:this.keys.down=!0;break;case 39:case 68:this.keys.right=!0;break;case 32:this.keys.jump=!0}},handleKeyUp:function(t){switch(t.keyCode){case 38:case 87:this.keys.up=!1;break;case 37:case 65:this.keys.left=!1;break;case 40:case 83:this.keys.down=!1;break;case 39:case 68:this.keys.right=!1}},handleMouseDown:function(t){var e=this.domElement.getBoundingClientRect(),i=this.domElement.width,s=(t.clientX-e.left)/i,n=this.attributes.cameraThreshold;this.target.rotation.y=s<n?this.rotation.y+(n-s)/n*this.attributes.maxRotationOffset:s>1-n?this.rotation.y+(s-(1-n))/n*-this.attributes.maxRotationOffset:this.rotation.y},handleMouseMove:function(t){var e=this.domElement.getBoundingClientRect(),i=this.domElement.width,s=this.domElement.height,n=(t.clientX-e.left)/i,o=(t.clientY-e.top)/s,r=this.attributes.cameraThreshold;this.target.offset.rotation.y=n<r?(r-n)/r*this.attributes.maxRotationOffset:n>1-r?(n-(1-r))/r*-this.attributes.maxRotationOffset:0,this.target.offset.rotation.x=o<r?(r-o)/r*this.attributes.maxRotationOffset:o>1-r?(o-(1-r))/r*-this.attributes.maxRotationOffset:0}},e.default=n}]);