var Collider=function(t){function i(e){if(n[e])return n[e].exports;var s=n[e]={i:e,l:!1,exports:{}};return t[e].call(s.exports,s,s.exports,i),s.l=!0,s.exports}var n={};return i.m=t,i.c=n,i.d=function(t,n,e){i.o(t,n)||Object.defineProperty(t,n,{configurable:!1,enumerable:!0,get:e})},i.n=function(t){var n=t&&t.__esModule?function(){return t.default}:function(){return t};return i.d(n,"a",n),n},i.o=function(t,i){return Object.prototype.hasOwnProperty.call(t,i)},i.p="",i(i.s=3)}([function(t,i,n){"use strict";Object.defineProperty(i,"__esModule",{value:!0});var e={system:{},quadrants:{size:{x:100,y:100,z:100}},plane:{dotBuffer:.001,collisionThreshold:.5},sandbox:{physics:{gravity:20,maxVelocity:50,floor:-1,snapUp:1,snapDown:.5,minSlope:Math.PI/5,noclip:!0},player:{height:2,position:{x:0,y:0,z:0},rotation:{pitch:0,yaw:Math.PI,roll:0,maxPitch:.25*Math.PI,minPitch:-.25*Math.PI},speed:{normal:8,slowed:4,noclip:20,rotation:.75*Math.PI,jump:10,fallTimerThreshold:.2}},camera:{fov:60,aspect:1,near:.1,far:1e4},adjust:{verySlow:.01,slow:.025,normal:.05,fast:.09,rapid:.12,veryFast:.2}}};i.default=e},function(t,i,n){"use strict";Object.defineProperty(i,"__esModule",{value:!0});var e=2*Math.PI,s=function(t){return new THREE.Vector3(t.x,t.y,t.z)},o=function(t,i){return new THREE.Vector3(t.x+i.x,t.y+i.y,t.z+i.z)},r=function(t,i){return new THREE.Vector3(t.x-i.x,t.y-i.y,t.z-i.z)},a=function(t){var i=Math.sqrt(t.x*t.x+t.y*t.y+t.z*t.z);return 0==i?new THREE.Vector3(0,0,0):new THREE.Vector3(t.x/i,t.y/i,t.z/i)},h=function(t){var i=Math.sqrt(t.x*t.x+t.y*t.y);return 0==i?new THREE.Vector2(0,0):new THREE.Vector2(t.x/i,t.y/i)},l=function(t){return t.x*=-1,t.y*=-1,t.z*=-1,t},c=function(t,i){return Math.sqrt(Math.pow(i.x-t.x,2)+Math.pow(i.y-t.y,2)+Math.pow(i.z-t.z,2))},u=function(t,i){return Math.sqrt(Math.pow(i.x-t.x,2)+Math.pow(i.z-t.z,2))},f=function(t,i){var n=u(t,i),e=i.y-t.y;return Math.atan2(e,n)},p=function(t,i){return new THREE.Vector3(t.x*i,t.y*i,t.z*i)},m=function(t,i){return t.x===i.x&&t.y===i.y&t.z===i.z},d=function(t,i){return new THREE.Vector3(t.y*i.z-t.z*i.y,t.z*i.x-t.x*i.z,t.x*i.y-t.y*i.x)},y=function(t,i){return Math.atan2(Math.sin(i-t),Math.cos(i-t))},g=function(t,i){return t.x*i.x+t.y*i.y+t.z*i.z},x=function(t,i){return t.x*i.x+t.y*i.y};i.copyVector=s,i.isVectorEqual=m,i.pitchBetween=f,i.twoPi=e,i.distanceBetween=c,i.distanceBetween2D=u,i.minAngleDifference=y,i.dotProduct=g,i.dotProduct2=x,i.addVector=o,i.subtractVector=r,i.scaleVector=p,i.crossProduct=d,i.reverseVector=l,i.normalise=a,i.normalise2=h},function(t,i){"use strict";throw new Error("Module build failed: SyntaxError: E:/Programs/XAMPP/htdocs/github_repos/collider/collider/src/js/modules/Logger.js: Unexpected token, expected , (35:2)\n\n[0m [90m 33 | [39m  }\n [90m 34 | [39m\n[31m[1m>[22m[39m[90m 35 | [39m  print[33m:[39m [36mfunction[39m() {\n [90m    | [39m  [31m[1m^[22m[39m\n [90m 36 | [39m    [36mthis[39m[33m.[39mclear()[33m;[39m\n [90m 37 | [39m\n [90m 38 | [39m    [36mfor[39m (let i[33m=[39m[35m0[39m[33m;[39m i[33m<[39m[33marguments[39m[33m.[39mlength[33m;[39m i[33m+=[39m[35m1[39m) {[0m\n")},function(t,i,n){"use strict";function e(t){return t&&t.__esModule?t:{default:t}}Object.defineProperty(i,"__esModule",{value:!0}),i.Logger=i.Player=i.System=i.Mesh=void 0;var s=n(4),o=e(s),r=n(7),a=e(r),h=n(9),l=e(h),c=n(2),u=e(c);i.Mesh=o.default,i.System=a.default,i.Player=l.default,i.Logger=u.default},function(t,i,n){"use strict";function e(t){return t&&t.__esModule?t:{default:t}}Object.defineProperty(i,"__esModule",{value:!0});var s=n(0),o=(e(s),n(5)),r=e(o),a=n(6),h=e(a),l=n(1),c=function(t){if(this.isColliderMesh=!0,!t.geometry.isBufferGeometry)throw"Error: Input is not THREE.BufferGeometry";this.geometry=t.geometry,this.box=(new THREE.Box3).setFromBufferAttribute(t.geometry.attributes.position),this.min=this.box.min,this.max=this.box.max,this.planes=[],this.transform=new h.default(t),this.generatePlanes()};c.prototype={generatePlanes:function(){var t=this.geometry.attributes.position.array,i=this.geometry.attributes.normal.array;if(this.geometry.index)for(var n=this.geometry.index.array,e=this.geometry.attributes.position.itemSize,s=0;s<n.length;s+=3){var o=n[s]*e,a=n[s+1]*e,h=n[s+2]*e;this.planes.push(new r.default(new THREE.Vector3(t[o],t[o+1],t[o+2]),new THREE.Vector3(t[a],t[a+1],t[a+2]),new THREE.Vector3(t[h],t[h+1],t[h+2]),new THREE.Vector3(i[o],i[o+1],i[o+2]),new THREE.Vector3(i[a],i[a+1],i[a+2]),new THREE.Vector3(i[h],i[h+1],i[h+2])))}else for(var l=0;l<t.length;l+=9)this.planes.push(new r.default(new THREE.Vector3(t[l+0],t[l+1],t[l+2]),new THREE.Vector3(t[l+3],t[l+4],t[l+5]),new THREE.Vector3(t[l+6],t[l+7],t[l+8]),new THREE.Vector3(i[l+0],i[l+1],i[l+2]),new THREE.Vector3(i[l+3],i[l+4],i[l+5]),new THREE.Vector3(i[l+6],i[l+7],i[l+8])))},getCollision:function(t){if(this.transform.set(t),this.box.containsPoint(this.transform.point)){for(var i=0;i<this.planes.length;i+=1)this.planes[i].culled=!1;for(var n=0;n<this.planes.length;n+=1)if(!this.planes[n].culled&&this.planes[n].isPointBelowOrEqual(this.transform.point))for(var e=0;e<this.planes.length;e+=1)!this.planes[e].culled&&e!=n&&this.planes[n].isPlaneAbove(this.planes[e])&&(this.planes[e].culled=!0);for(var s=0;s<this.planes.length;s+=1)if(!this.planes[s].culled&&!this.planes[s].isPointBelowOrEqual(this.transform.point))return!1;return!0}return!1},getCollision2D:function(t){return this.transform.set(t),this.transform.point.x>=this.min.x&&this.transform.point.x<=this.max.x&&this.transform.point.z>=this.min.z&&this.transform.point.z<=this.max.z},getCeiling2D:function(t){this.transform.set(t);for(var i=null,n=0;n<this.planes.length;n+=1)if(this.planes[n].containsPoint2D(this.transform.point)){var e=plane.getY(this.transform.point.x,this.transform.point.z);(null===i||e>i)&&(i=e)}return null==i?null:this.transform.reverseY(i)},getCeiling:function(t){this.transform.set(t);for(var i=null,n=0;n<this.planes.length;n+=1)if(this.planes[n].containsPoint2D(this.transform.point)&&this.planes[n].isPointBelowOrEqual(this.transform.point)){var e=plane.getY(this.transform.point.x,this.transform.point.z);e>=this.transform.point.y&&(null===i||e<i)&&(i=e)}return null==i?null:this.transform.reverseY(i)},getCeilingPlane:function(t){this.transform.set(t);for(var i=null,n=0;n<this.planes.length;n+=1)if(this.planes[n].containsPoint2D(this.transform.point)&&this.planes[n].containsPointPrecise2D(this.transform.point)&&this.planes[n].isPointBelowOrEqual(this.transform.point)){var e=this.planes[n].getY(this.transform.point.x,this.transform.point.z);null!=e&&e>=this.transform.point.y&&(null==i||e>i.y)&&(i={y:e,plane:this.planes[n]})}return null==i?null:{y:this.transform.reverseY(i.y),plane:i.plane}},getIntersectPlane:function(t,i){for(var n=this.transform.getTransformedPoint(t),e=this.transform.getTransformedPoint(i),s=(new THREE.Box3).setFromPoints([n,e]),o=null,r=0;r<this.planes.length;r+=1)if(this.planes[r].intersectsBox(s)||this.planes[r].containsBox(s)){var a=this.planes[r].getIntersect(n,e);if(null!=a){var h=(0,l.distanceBetween)(n,a);(null===o||h<o.distance)&&(o={intersect:a,plane:this.planes[r],distance:h})}}return null==o?null:{intersect:this.transform.reverse(o.intersect),plane:o.plane,distance:o.distance}},getIntersectPlane2D:function(t,i){for(var n=this.transform.getTransformedPoint(t),e=this.transform.getTransformedPoint(i),s=(new THREE.Box3).setFromPoints([n,e]),o=null,r=0;r<this.planes.length;r+=1)if(this.planes[r].intersectsBox(s)||this.planes[r].containsBox(s)){var a=this.planes[r].getNormalIntersect2D(e);if(null!=a){var h=(0,l.distanceBetween)(e,a);(null===o||h<o.distance)&&(o={plane:this.planes[r],intersect:a,distance:h})}}return null==o?null:{intersect:this.transform.reverse(o.intersect),plane:o.plane,distance:o.distance}}},i.default=c},function(t,i,n){"use strict";Object.defineProperty(i,"__esModule",{value:!0});var e=n(1),s=function(t){if(t&&t.__esModule)return t;var i={};if(null!=t)for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(i[n]=t[n]);return i.default=t,i}(e),o=n(0),r=function(t){return t&&t.__esModule?t:{default:t}}(o),a=function(t,i,n,e,s,o){this.p1=t,this.p2=i,this.p3=n,this.n1=e,this.n2=s,this.n3=o,this.culled=!1,this.generatePlane()};a.prototype={generatePlane:function(){this.e1={},this.e2={},this.e3={},this.e1.centre=s.scaleVector(s.addVector(this.p1,this.p2),.5),this.e2.centre=s.scaleVector(s.addVector(this.p2,this.p3),.5),this.e3.centre=s.scaleVector(s.addVector(this.p3,this.p1),.5),this.e1.vec=s.subtractVector(this.p2,this.p1),this.e2.vec=s.subtractVector(this.p3,this.p2),this.e3.vec=s.subtractVector(this.p1,this.p3),this.e1.vec2=new THREE.Vector2(this.e1.vec.x,this.e1.vec.z),this.e2.vec2=new THREE.Vector2(this.e2.vec.x,this.e2.vec.z),this.e3.vec2=new THREE.Vector2(this.e3.vec.x,this.e3.vec.z),this.e1.norm2=new THREE.Vector2(-this.e1.vec.z,this.e1.vec.x),this.e2.norm2=new THREE.Vector2(-this.e2.vec.z,this.e2.vec.x),this.e3.norm2=new THREE.Vector2(-this.e3.vec.z,this.e3.vec.x),this.normal=s.normalise(s.crossProduct(this.e3.vec,this.e1.vec)),this.normalXZ=new THREE.Vector3(this.normal.x,0,this.normal.z),s.dotProduct(this.normal,this.n1)<0&&s.dotProduct(this.normal,this.n2)<0&&s.dotProduct(this.normal,this.n3)<0&&(this.normal=s.reverseVector(this.normal)),this.position=new THREE.Vector3((this.p1.x+this.p2.x+this.p3.x)/3,(this.p1.y+this.p2.y+this.p3.y)/3,(this.p1.z+this.p2.z+this.p3.z)/3),this.D=-this.normal.x*this.position.x-this.normal.y*this.position.y-this.normal.z*this.position.z,this.box=(new THREE.Box3).setFromPoints([this.p1,this.p2,this.p3]),this.boxExpanded=(new THREE.Box3).setFromPoints([this.p1,this.p2,this.p3]).expandByScalar(r.default.plane.surfaceCollisionThreshold)},isPointAbove:function(t){var i=s.subtractVector(t,this.position);return s.dotProduct(i,this.normal)>0},isPointBelow:function(t){var i=s.subtractVector(t,this.position);return s.dotProduct(i,this.normal)<0},isPointAboveOrEqual:function(t){var i=s.subtractVector(t,this.position);return s.dotProduct(i,this.normal)>=-r.default.plane.dotBuffer},isPointBelowOrEqual:function(t){var i=s.subtractVector(t,this.position);return s.dotProduct(i,this.normal)<=r.default.plane.dotBuffer},isPointOnSurface:function(t){var i=s.subtractVector(t,this.position),n=s.dotProduct(i,this.normal);return n<=r.default.plane.dotBuffer&&n>=-r.default.plane.dotBuffer},isPlaneAbove:function(t){return this.isPointAboveOrEqual(t.p1)&&this.isPointAboveOrEqual(t.p2)&&this.isPointAboveOrEqual(t.p3)},containsPoint:function(t){return this.box.containsPoint(t)},containsBox:function(t){return this.box.containsBox(t)},intersectsBox:function(t){return this.box.intersectsBox(t)},containsPoint2D:function(t){return this.box.min.x<=t.x&&this.box.max.x>=t.x&&this.box.min.z<=t.z&&this.box.max.z>=t.z},containsPointPrecise2D:function(t){return s.dotProduct2({x:t.x-this.e1.centre.x,y:t.z-this.e1.centre.z},this.e1.norm2)<r.default.plane.dotBuffer&&s.dotProduct2({x:t.x-this.e2.centre.x,y:t.z-this.e2.centre.z},this.e2.norm2)<r.default.plane.dotBuffer&&s.dotProduct2({x:t.x-this.e3.centre.x,y:t.z-this.e3.centre.z},this.e3.norm2)<r.default.plane.dotBuffer},containsPointThreshold:function(t){return this.boxExpanded.containsPoint(t)},distanceToPlane:function(t){return Math.abs(this.normal.x*t.x+this.normal.y*t.y+this.normal.z*t.z+this.D)},getIntersect:function(t,i){var n=s.subtractVector(i,t),e=s.dotProduct(this.normal,s.normalise(n));if(Math.abs(e)<=r.default.plane.dotBuffer)return null;var o=this.normal.x*t.x+this.normal.y*t.y+this.normal.z*t.z+this.D,a=this.normal.x*n.x+this.normal.y*n.y+this.normal.z*n.z;if(0==a)return null;var h=t.x-n.x*o/a,l=t.y-n.y*o/a,c=t.z-n.z*o/a,u=new THREE.Vector3(h,l,c);if(this.containsPoint(u)){if((new THREE.Box3).setFromPoints([i,t]).expandByScalar(.05).containsPoint(u))return u}return null},getNormalIntersect:function(t){var i=s.addVector(t,this.normal),n=s.subtractVector(i,t),e=this.normal.x*t.x+this.normal.y*t.y+this.normal.z*t.z+this.D,o=this.normal.x*n.x+this.normal.y*n.y+this.normal.z*n.z,r=t.x-n.x*e/o,a=t.y-n.y*e/o,h=t.z-n.z*e/o;return new THREE.Vector3(r,a,h)},getNormalIntersect2D:function(t){var i=this.normal.x*t.x+this.normal.y*t.y+this.normal.z*t.z+this.D,n=this.normal.x*this.normal.x+this.normal.z*this.normal.z;return 0==n?null:new THREE.Vector3(t.x-this.normal.x*i/n,t.y,t.z-this.normal.z*i/n)},getY:function(t,i){return 0!=this.normal.y?(this.normal.x*t+this.normal.z*i+this.D)/-this.normal.y:null},getPerpendicularNormals:function(){return{right:new THREE.Vector3(-this.normal.z,0,this.normal.x),left:new THREE.Vector3(this.normal.z,0,-this.normal.x)}}},i.default=a},function(t,i,n){"use strict";Object.defineProperty(i,"__esModule",{value:!0});var e=function(t){this.point=new THREE.Vector3,this.position=t.position,this.rotation=t.rotation,this.scale=t.scale};e.prototype={set:function(t){this.point.x=t.x-this.position.x,this.point.y=t.y-this.position.y,this.point.z=t.z-this.position.z},getTransformedPoint:function(t){return{x:t.x-this.position.x,y:t.y-this.position.y,z:t.z-this.position.z}},reverseY:function(t){return t+this.position.y},reverse:function(t){return{x:t.x+this.position.x,y:t.y+this.position.y,z:t.z+this.position.z}}},i.default=e},function(t,i,n){"use strict";function e(t){return t&&t.__esModule?t:{default:t}}Object.defineProperty(i,"__esModule",{value:!0});var s=n(0),o=(e(s),n(8)),r=e(o),a=function(){this.quadrants=new r.default,this.isColliderSystem=!0};a.prototype={add:function(){for(var t=0;t<arguments.length;t+=1){var i=arguments[t];if(!i.isColliderMesh)throw"Error: Input must be Collider.Mesh";this.quadrants.add(i)}},getCollision:function(t){for(var i=!1,n=this.quadrants.getQuadrantMeshes(t),e=0;e<n.length;e+=1)if(n[e].getCollision(t)){i=!0;break}return i},getCollisionMeshes:function(t){for(var i=[],n=this.quadrants.getQuadrantMeshes(t),e=0;e<n.length;e+=1)n[e].getCollision(t)&&i.push(n[e]);return i},getCeilingPlane:function(t){for(var i=null,n=this.quadrants.getQuadrantMeshes(t),e=0;e<n.length;e+=1)if(n[e].getCollision(t)){var s=n[e].getCeilingPlane(t);null!=s&&(null===i||s.y>i.y)&&(i={y:s.y,plane:s.plane})}return null===i?null:i}},i.default=a},function(t,i,n){"use strict";Object.defineProperty(i,"__esModule",{value:!0});var e=n(0),s=function(t){return t&&t.__esModule?t:{default:t}}(e),o=function(){this.q=[]};o.prototype={positionToQuadrant:function(t){return{x:Math.floor(t.x/s.default.quadrants.size.x),y:Math.floor(t.y/s.default.quadrants.size.y),z:Math.floor(t.z/s.default.quadrants.size.z)}},add:function(t){for(var i=this.positionToQuadrant(t.min),n=this.positionToQuadrant(t.max),e=i.x;e<=n.x;e+=1)for(var s=i.y;s<=n.y;s+=1)for(var o=i.z;o<=n.z;o+=1)this.addToQuadrant(e,s,o,t)},addToQuadrant:function(t,i,n,e){this.q[t]||(this.q[t]=[]),this.q[t][i]||(this.q[t][i]=[]),this.q[t][i][n]||(this.q[t][i][n]=[]),this.q[t][i][n].push(e)},getQuadrantMeshes:function(t){var i=this.positionToQuadrant(t);return this.q[i.x]&&this.q[i.x][i.y]&&this.q[i.x][i.y][i.z]?this.q[i.x][i.y][i.z]:[]}},i.default=o},function(t,i,n){"use strict";function e(t){return t&&t.__esModule?t:{default:t}}Object.defineProperty(i,"__esModule",{value:!0});var s=n(1),o=function(t){if(t&&t.__esModule)return t;var i={};if(null!=t)for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(i[n]=t[n]);return i.default=t,i}(s),r=n(10),a=e(r),h=n(0),l=e(h),c=function(t){this.domElement=t,this.config=l.default.sandbox.player,this.config.adjust=l.default.sandbox.adjust,this.config.physics=l.default.sandbox.physics,this.position=new THREE.Vector3(this.config.position.x,this.config.position.y,this.config.position.z),this.rotation={pitch:this.config.rotation.pitch,yaw:this.config.rotation.yaw,roll:this.config.rotation.roll},this.motion=new THREE.Vector3(0,0,0),this.offset={rotation:{pitch:0,yaw:0,roll:0}},this.target={position:new THREE.Vector3(this.config.position.x,this.config.position.y,this.config.position.z),rotation:{pitch:this.config.rotation.pitch,yaw:this.config.rotation.yaw,roll:this.config.rotation.roll},motion:new THREE.Vector3(0,0,0),offset:{rotation:{pitch:0,yaw:0,roll:0}}},this.falling=!1,this.fallTimer=0,this.camera=new THREE.PerspectiveCamera(l.default.sandbox.camera.fov,l.default.sandbox.camera.aspect,l.default.sandbox.camera.near,l.default.sandbox.camera.far),this.camera.up=new THREE.Vector3(0,1,0),this.object=new THREE.Group,this.interaction=new a.default(this.target.position,this.motion),this.init()};c.prototype={init:function(){this.bindControls(),this.resizeCamera()},update:function(t,i){this.handleInput(t),this.interaction.computeNextPosition(t,i),this.move()},handleInput:function(t){if(this.keys.left||this.keys.right){var i=(this.keys.left?1:0)+(this.keys.right?-1:0);this.target.rotation.yaw+=this.config.speed.rotation*t*i}if(this.keys.up||this.keys.down){var n=this.config.physics.noclip?this.config.speed.noclip:this.config.speed.normal,e=(this.keys.up?1:0)+(this.keys.down?-1:0),s=this.rotation.yaw+this.offset.rotation.yaw,o=Math.sin(s)*n*e,r=Math.cos(s)*n*e;this.target.motion.x=o,this.target.motion.z=r}else this.target.motion.x=0,this.target.motion.z=0;if(this.keys.jump&&(this.keys.jump=!1,(0==this.motion.y||this.fallTimer<this.config.speed.fallTimerThreshold)&&(this.motion.y=this.config.speed.jump)),this.falling=0!=this.motion.y,this.fallTimer=this.falling?this.fallTimer+t:0,this.keys.x&&(this.keys.x=!1,this.config.physics.noclip=0==this.config.physics.noclip),this.config.physics.noclip){if(this.falling=!1,this.keys.up||this.keys.down){var a=(this.keys.up?1:0)+(this.keys.down?-1:0),h=this.target.rotation.pitch;this.target.motion.y=Math.sin(h)*this.config.speed.noclip*a}else this.target.motion.y=0;this.motion.y=this.target.motion.y}this.falling?(this.motion.x+=(this.target.motion.x-this.motion.x)*this.config.adjust.slow,this.motion.z+=(this.target.motion.z-this.motion.z)*this.config.adjust.slow):(this.motion.x=this.target.motion.x,this.motion.z=this.target.motion.z)},move:function(){this.position.x+=(this.target.position.x-this.position.x)*this.config.adjust.veryFast,this.position.y+=(this.target.position.y-this.position.y)*this.config.adjust.rapid,this.position.z+=(this.target.position.z-this.position.z)*this.config.adjust.veryFast,this.rotation.yaw+=o.minAngleDifference(this.rotation.yaw,this.target.rotation.yaw)*this.config.adjust.fast,this.offset.rotation.yaw+=(this.target.offset.rotation.yaw-this.offset.rotation.yaw)*this.config.adjust.normal,this.rotation.yaw+=this.rotation.yaw<0?o.twoPi:this.rotation.yaw>o.twoPi?-o.twoPi:0,this.rotation.pitch+=(this.target.rotation.pitch-this.rotation.pitch)*this.config.adjust.normal,this.offset.rotation.pitch+=(this.target.offset.rotation.pitch-this.offset.rotation.pitch)*this.config.adjust.normal,this.rotation.roll+=(this.target.rotation.roll-this.rotation.roll)*this.config.adjust.fast;var t=this.rotation.pitch+this.offset.rotation.pitch,i=this.rotation.yaw+this.offset.rotation.yaw,n=this.position.y+this.config.height;this.camera.up.z=-Math.sin(this.rotation.yaw)*this.rotation.roll,this.camera.up.x=Math.cos(this.rotation.yaw)*this.rotation.roll,this.camera.position.set(this.position.x,n,this.position.z),this.camera.lookAt(new THREE.Vector3(this.position.x+Math.sin(i),n+Math.sin(t),this.position.z+Math.cos(i))),this.object.position.set(this.position.x,this.position.y,this.position.z)},handleKeyDown:function(t){switch(t.keyCode){case 38:case 87:this.keys.up=!0;break;case 37:case 65:this.keys.left=!0;break;case 40:case 83:this.keys.down=!0;break;case 39:case 68:this.keys.right=!0;break;case 32:this.keys.jump=!0;break;case 88:this.keys.x=!0}},handleKeyUp:function(t){switch(t.keyCode){case 38:case 87:this.keys.up=!1;break;case 37:case 65:this.keys.left=!1;break;case 40:case 83:this.keys.down=!1;break;case 39:case 68:this.keys.right=!1}},handleMouseDown:function(t){if(!this.mouse.locked){var i=this.domElement.getBoundingClientRect();this.mouse.active=!0,this.mouse.rotation.pitch=this.rotation.pitch,this.mouse.rotation.yaw=this.rotation.yaw,this.mouse.start.x=t.clientX/this.domElement.width*2-1,this.mouse.start.y=(t.clientY-i.y)/this.domElement.height*2-1}},handleMouseMove:function(t){if(this.mouse.active&&!this.keys.left&&!this.keys.right){var i=this.domElement.getBoundingClientRect();this.mouse.x=t.clientX/this.domElement.width*2-1,this.mouse.y=(t.clientY-i.y)/this.domElement.height*2-1,this.mouse.delta.x=this.mouse.x-this.mouse.start.x,this.mouse.delta.y=this.mouse.y-this.mouse.start.y,this.target.rotation.yaw=this.mouse.rotation.yaw+this.mouse.delta.x;var n=this.mouse.rotation.pitch+this.mouse.delta.y;(n>this.config.rotation.maxPitch||n<this.config.rotation.minPitch)&&(n=Math.max(this.config.rotation.minPitch,Math.min(this.config.rotation.maxPitch,n)),this.mouse.start.y=this.mouse.y,this.mouse.rotation.pitch=n),this.target.rotation.pitch=n}},handleMouseUp:function(t){this.mouse.active=!1},resizeCamera:function(){var t=this.domElement.width,i=this.domElement.height;this.camera.aspect=t/i,this.camera.updateProjectionMatrix()},bindControls:function(){var t=this;t.keys={up:!1,down:!1,left:!1,right:!1,jump:!1,x:!1},t.mouse={x:0,y:0,start:{x:0,y:0},delta:{x:0,y:0},rotation:{pitch:0,yaw:0},locked:!1,active:!1},t.domElement.addEventListener("click",function(t){},!1),t.domElement.addEventListener("mousedown",function(i){t.handleMouseDown(i)},!1),t.domElement.addEventListener("mousemove",function(i){t.handleMouseMove(i)},!1),t.domElement.addEventListener("mouseup",function(i){t.handleMouseUp(i)},!1),t.domElement.addEventListener("mouseleave",function(i){t.handleMouseUp(i)},!1),document.addEventListener("keydown",function(i){t.handleKeyDown(i)},!1),document.addEventListener("keyup",function(i){t.handleKeyUp(i)},!1)}},i.default=c},function(t,i,n){"use strict";function e(t){return t&&t.__esModule?t:{default:t}}Object.defineProperty(i,"__esModule",{value:!0});var s=n(0),o=e(s),r=n(1),a=function(t){if(t&&t.__esModule)return t;var i={};if(null!=t)for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(i[n]=t[n]);return i.default=t,i}(r),h=n(2),l=e(h),c=function(t,i){this.position=t,this.motion=i,this.falling=!1,this.config={},this.config.physics=o.default.sandbox.physics,this.logger=new l.default};c.prototype={applyPhysics:function(t){this.falling=this.motion.y<0,this.motion.y=Math.max(this.motion.y-this.config.physics.gravity*t,-this.config.physics.maxVelocity)},setPhysics:function(t){this.config.physics.gravity=t.gravity?t.gravity:this.config.physics.gravity,this.config.physics.floor=t.floor?t.floor:this.config.physics.floor,this.config.physics.snapUp=t.snapUp?t.snapUp:this.config.physics.snapUp,this.config.physics.snapDown=t.snapDown?t.snapDown:this.config.physics.snapDown},computeNextPosition:function(t,i){var n=a.addVector(this.position,a.scaleVector(this.motion,t));if(!this.config.physics.noclip){var e=i.getCollisionMeshes(n);if(this.applyPhysics(t),e.length>0)this.stepUpSlopes(n,e)&&(e=i.getCollisionMeshes(n)),this.testObstructions(n,e,i)&&(e=i.getCollisionMeshes(n),this.stepUpSlopes(n,e));else if(this.motion.y<0&&!this.falling){var s=a.copyVector(n);s.y-=this.config.physics.snapDown;var o=i.getCeilingPlane(s);this.stepDownSlope(n,o)}}this.position.x=n.x,this.position.y=n.y,this.position.z=n.z,this.position.y<this.config.physics.floor&&(this.motion.y=0,this.position.y=this.config.physics.floor),this.logger.print("M "+this.logger.formatVector(this.motion),"P "+this.logger.formatVector(this.position))},testObstructions:function(t,i,n){for(var e=!1,s=!1,o=0;o<i.length;o+=1){var r=i[o].getCeilingPlane(t);if(null!=r&&(r.plane.normal.y<this.config.physics.minSlope||r.y-this.position.y>this.config.physics.snapUp)){e=i[o];break}}if(e){var h=(a.copyVector(t),e.getIntersectPlane2D(this.position,t));if(null!=h){t.x=h.intersect.x,t.z=h.intersect.z;var l=0;i=n.getCollisionMeshes(t);for(var c=0;c<i.length;c+=1){var u=i[c].getCeilingPlane(t);null!=u&&(u.plane.normal.y<this.config.physics.minSlope||u.y-this.position.y>this.config.physics.snapUp)&&(l+=1)}l>1?(t.x=this.position.x,t.z=this.position.z):s=!0}else t.x=this.position.x,t.z=this.position.z}return s},stepUpSlopes:function(t,i){for(var n=!1,e=0;e<i.length;e+=1){var s=i[e].getCeilingPlane(t);null!=s&&s.plane.normal.y>=this.config.physics.minSlope&&s.y-this.position.y<=this.config.physics.snapUp&&s.y>=t.y&&(n=!0,t.y=s.y,this.motion.y=0)}return n},stepDownSlope:function(t,i){var n=!1;return null!=i&&i.plane.normal.y>=this.config.physics.minSlope&&(t.y=i.y,this.motion.y=0,n=!0),n}},i.default=c}]);