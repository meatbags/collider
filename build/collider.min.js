var Collider=function(t){function i(s){if(e[s])return e[s].exports;var n=e[s]={i:s,l:!1,exports:{}};return t[s].call(n.exports,n,n.exports,i),n.l=!0,n.exports}var e={};return i.m=t,i.c=e,i.d=function(t,e,s){i.o(t,e)||Object.defineProperty(t,e,{configurable:!1,enumerable:!0,get:s})},i.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return i.d(e,"a",e),e},i.o=function(t,i){return Object.prototype.hasOwnProperty.call(t,i)},i.p="",i(i.s=3)}([function(t,i,e){"use strict";Object.defineProperty(i,"__esModule",{value:!0});var s={system:{maxPlanesPerMesh:100},quadrants:{size:{x:100,y:100,z:100}},plane:{dotBuffer:.001,collisionThreshold:.5},sandbox:{physics:{gravity:20,maxVelocity:50,floor:-.5,snapUp:1,snapDown:.5,minSlope:Math.PI/5,noclip:!1},player:{height:2,position:{x:0,y:0,z:0},rotation:{pitch:0,yaw:Math.PI,roll:0,maxPitch:.4*Math.PI,minPitch:-.4*Math.PI},speed:{normal:8,slowed:4,noclip:20,rotation:.75*Math.PI,jump:10,fallTimerThreshold:.2}},camera:{fov:60,aspect:1,near:.1,far:1e4},adjust:{verySlow:.01,slow:.025,normal:.05,fast:.09,rapid:.12,veryFast:.2}}};i.default=s},function(t,i,e){"use strict";Object.defineProperty(i,"__esModule",{value:!0});var s=2*Math.PI,n=function(t){return new THREE.Vector3(t.x,t.y,t.z)},o=function(t,i){return new THREE.Vector3(t.x+i.x,t.y+i.y,t.z+i.z)},r=function(t,i){return new THREE.Vector3(t.x-i.x,t.y-i.y,t.z-i.z)},a=function(t){var i=Math.sqrt(t.x*t.x+t.y*t.y+t.z*t.z);return 0==i?new THREE.Vector3(0,0,0):new THREE.Vector3(t.x/i,t.y/i,t.z/i)},h=function(t){var i=Math.sqrt(t.x*t.x+t.y*t.y);return 0==i?new THREE.Vector2(0,0):new THREE.Vector2(t.x/i,t.y/i)},l=function(t){return t.x*=-1,t.y*=-1,t.z*=-1,t},c=function(t,i){return Math.sqrt(Math.pow(i.x-t.x,2)+Math.pow(i.y-t.y,2)+Math.pow(i.z-t.z,2))},u=function(t,i){return Math.sqrt(Math.pow(i.x-t.x,2)+Math.pow(i.z-t.z,2))},p=function(t,i){var e=u(t,i),s=i.y-t.y;return Math.atan2(s,e)},f=function(t,i){return new THREE.Vector3(t.x*i,t.y*i,t.z*i)},d=function(t,i){return new THREE.Vector3(t.x*i.x,t.y*i.y,t.z*i.z)},y=function(t,i){return t.x===i.x&&t.y===i.y&t.z===i.z},m=function(t,i){return new THREE.Vector3(t.y*i.z-t.z*i.y,t.z*i.x-t.x*i.z,t.x*i.y-t.y*i.x)},g=function(t,i){return Math.atan2(Math.sin(i-t),Math.cos(i-t))},x=function(t,i){return t.x*i.x+t.y*i.y+t.z*i.z},v=function(t,i){return t.x*i.x+t.y*i.y};i.copyVector=n,i.isVectorEqual=y,i.pitchBetween=p,i.scaleByVector=d,i.twoPi=s,i.distanceBetween=c,i.distanceBetween2D=u,i.minAngleDifference=g,i.dotProduct=x,i.dotProduct2=v,i.addVector=o,i.subtractVector=r,i.scaleVector=f,i.crossProduct=m,i.reverseVector=l,i.normalise=a,i.normalise2=h},function(t,i,e){"use strict";Object.defineProperty(i,"__esModule",{value:!0});var s=function(){this.cvs=document.createElement("canvas"),this.ctx=this.cvs.getContext("2d"),this.init()};s.prototype={init:function(){document.body.append(this.cvs),this.setStyle()},setStyle:function(){this.cvs.style.position="fixed",this.cvs.width=window.innerWidth,this.cvs.style.pointerEvents="none",this.cvs.height=400,this.cvs.style.zIndex=10,this.cvs.style.top=0,this.cvs.style.left=0},clear:function(){this.ctx.clearRect(0,0,this.cvs.width,this.cvs.height)},format:function(t){return Math.floor(10*t)/10},formatVector:function(t){return this.format(t.x)+", "+this.format(t.y)+", "+this.format(t.z)},print:function(){this.clear();for(var t=0;t<arguments.length;t+=1)this.ctx.fillText(arguments[t],20,20+20*t)}},i.default=s},function(t,i,e){"use strict";function s(t){return t&&t.__esModule?t:{default:t}}Object.defineProperty(i,"__esModule",{value:!0}),i.Loader=i.Logger=i.Player=i.System=i.Mesh=void 0;var n=e(4),o=s(n),r=e(7),a=s(r),h=e(9),l=s(h),c=e(2),u=s(c),p=e(11),f=s(p);i.Mesh=o.default,i.System=a.default,i.Player=l.default,i.Logger=u.default,i.Loader=f.default},function(t,i,e){"use strict";function s(t){return t&&t.__esModule?t:{default:t}}Object.defineProperty(i,"__esModule",{value:!0});var n=e(0),o=(s(n),e(5)),r=s(o),a=e(6),h=s(a),l=e(1),c=function(t){if(this.isColliderMesh=!0,!t.geometry.isBufferGeometry)throw"Error: Input is not THREE.BufferGeometry";this.geometry=t.geometry,this.box=(new THREE.Box3).setFromBufferAttribute(t.geometry.attributes.position),this.min=this.box.min,this.max=this.box.max,this.planes=[],this.transform=new h.default(t),this.generatePlanes(),this.conformPlanes()};c.prototype={generatePlanes:function(){var t=this.geometry.attributes.position.array,i=this.geometry.attributes.normal.array;if(this.geometry.index)for(var e=this.geometry.index.array,s=this.geometry.attributes.position.itemSize,n=0;n<e.length;n+=3){var o=e[n]*s,a=e[n+1]*s,h=e[n+2]*s;this.planes.push(new r.default(new THREE.Vector3(t[o],t[o+1],t[o+2]),new THREE.Vector3(t[a],t[a+1],t[a+2]),new THREE.Vector3(t[h],t[h+1],t[h+2]),new THREE.Vector3(i[o],i[o+1],i[o+2]),new THREE.Vector3(i[a],i[a+1],i[a+2]),new THREE.Vector3(i[h],i[h+1],i[h+2])))}else for(var l=0;l<t.length;l+=9)this.planes.push(new r.default(new THREE.Vector3(t[l+0],t[l+1],t[l+2]),new THREE.Vector3(t[l+3],t[l+4],t[l+5]),new THREE.Vector3(t[l+6],t[l+7],t[l+8]),new THREE.Vector3(i[l+0],i[l+1],i[l+2]),new THREE.Vector3(i[l+3],i[l+4],i[l+5]),new THREE.Vector3(i[l+6],i[l+7],i[l+8])))},conformPlanes:function(){var t=!1;if(!this.transform.default.scale){for(var i=0;i<this.planes.length;i+=1)this.transform.bakeScale(this.planes[i]);t=!0}if(!this.transform.default.rotation){for(var e=0;e<this.planes.length;e+=1)this.transform.bakeRotation(this.planes[e]);t=!0}if(t){for(var s=0;s<this.planes.length;s+=1)this.planes[s].generatePlane();this.setBoxFromPlanes()}},setBoxFromPlanes:function(){for(var t=[],i=0;i<this.planes.length;i+=1){var e=this.planes[i];t.push(e.p1),t.push(e.p2),t.push(e.p3)}this.box.setFromPoints(t)},getCollision:function(t){if(this.transform.set(t),this.box.containsPoint(this.transform.point)){for(var i=0;i<this.planes.length;i+=1)this.planes[i].culled=!1;for(var e=0;e<this.planes.length;e+=1)if(!this.planes[e].culled&&this.planes[e].isPointBelowOrEqual(this.transform.point))for(var s=0;s<this.planes.length;s+=1)!this.planes[s].culled&&s!=e&&this.planes[e].isPlaneAbove(this.planes[s])&&(this.planes[s].culled=!0);for(var n=0;n<this.planes.length;n+=1)if(!this.planes[n].culled&&!this.planes[n].isPointBelowOrEqual(this.transform.point))return!1;return!0}return!1},getCollision2D:function(t){return this.transform.set(t),this.transform.point.x>=this.min.x&&this.transform.point.x<=this.max.x&&this.transform.point.z>=this.min.z&&this.transform.point.z<=this.max.z},getCeiling2D:function(t){this.transform.set(t);for(var i=null,e=0;e<this.planes.length;e+=1)if(this.planes[e].containsPoint2D(this.transform.point)){var s=plane.getY(this.transform.point.x,this.transform.point.z);(null===i||s>i)&&(i=s)}return null==i?null:this.transform.reverseY(i)},getCeiling:function(t){this.transform.set(t);for(var i=null,e=0;e<this.planes.length;e+=1)if(this.planes[e].containsPoint2D(this.transform.point)&&this.planes[e].isPointBelowOrEqual(this.transform.point)){var s=plane.getY(this.transform.point.x,this.transform.point.z);s>=this.transform.point.y&&(null===i||s<i)&&(i=s)}return null==i?null:this.transform.reverseY(i)},getCeilingPlane:function(t){this.transform.set(t);for(var i=null,e=0;e<this.planes.length;e+=1)if(this.planes[e].containsPoint2D(this.transform.point)&&this.planes[e].containsPointPrecise2D(this.transform.point)&&this.planes[e].isPointBelowOrEqual(this.transform.point)){var s=this.planes[e].getY(this.transform.point.x,this.transform.point.z);null!=s&&s>=this.transform.point.y&&(null==i||s>i.y)&&(i={y:s,plane:this.planes[e]})}return null==i?null:{y:this.transform.reverseY(i.y),plane:i.plane}},getIntersectPlane:function(t,i){for(var e=this.transform.getTransformedPoint(t),s=this.transform.getTransformedPoint(i),n=(new THREE.Box3).setFromPoints([e,s]),o=null,r=0;r<this.planes.length;r+=1)if(this.planes[r].intersectsBox(n)||this.planes[r].containsBox(n)){var a=this.planes[r].getIntersect(e,s);if(null!=a){var h=(0,l.distanceBetween)(e,a);(null===o||h<o.distance)&&(o={intersect:a,plane:this.planes[r],distance:h})}}return null==o?null:{intersect:this.transform.reverse(o.intersect),plane:o.plane,distance:o.distance}},getIntersectPlane2D:function(t,i){for(var e=this.transform.getTransformedPoint(t),s=this.transform.getTransformedPoint(i),n=(new THREE.Box3).setFromPoints([e,s]),o=null,r=0;r<this.planes.length;r+=1)if(this.planes[r].intersectsBox(n)||this.planes[r].containsBox(n)){var a=this.planes[r].getNormalIntersect2D(s);if(null!=a){var h=(0,l.distanceBetween)(s,a);(null===o||h<o.distance)&&(o={plane:this.planes[r],intersect:a,distance:h})}}return null==o?null:{intersect:this.transform.reverse(o.intersect),plane:o.plane,distance:o.distance}}},i.default=c},function(t,i,e){"use strict";Object.defineProperty(i,"__esModule",{value:!0});var s=e(1),n=function(t){if(t&&t.__esModule)return t;var i={};if(null!=t)for(var e in t)Object.prototype.hasOwnProperty.call(t,e)&&(i[e]=t[e]);return i.default=t,i}(s),o=e(0),r=function(t){return t&&t.__esModule?t:{default:t}}(o),a=function(t,i,e,s,n,o){this.p1=t,this.p2=i,this.p3=e,this.n1=s,this.n2=n,this.n3=o,this.culled=!1,this.generatePlane()};a.prototype={generatePlane:function(){this.e1={},this.e2={},this.e3={},this.e1.centre=n.scaleVector(n.addVector(this.p1,this.p2),.5),this.e2.centre=n.scaleVector(n.addVector(this.p2,this.p3),.5),this.e3.centre=n.scaleVector(n.addVector(this.p3,this.p1),.5),this.e1.vec=n.subtractVector(this.p2,this.p1),this.e2.vec=n.subtractVector(this.p3,this.p2),this.e3.vec=n.subtractVector(this.p1,this.p3),this.e1.vec2=new THREE.Vector2(this.e1.vec.x,this.e1.vec.z),this.e2.vec2=new THREE.Vector2(this.e2.vec.x,this.e2.vec.z),this.e3.vec2=new THREE.Vector2(this.e3.vec.x,this.e3.vec.z),this.e1.norm2=new THREE.Vector2(-this.e1.vec.z,this.e1.vec.x),this.e2.norm2=new THREE.Vector2(-this.e2.vec.z,this.e2.vec.x),this.e3.norm2=new THREE.Vector2(-this.e3.vec.z,this.e3.vec.x),this.normal=n.normalise(n.crossProduct(this.e3.vec,this.e1.vec)),this.normalXZ=new THREE.Vector3(this.normal.x,0,this.normal.z),n.dotProduct(this.normal,this.n1)<0&&n.dotProduct(this.normal,this.n2)<0&&n.dotProduct(this.normal,this.n3)<0&&(this.normal=n.reverseVector(this.normal)),this.position=new THREE.Vector3((this.p1.x+this.p2.x+this.p3.x)/3,(this.p1.y+this.p2.y+this.p3.y)/3,(this.p1.z+this.p2.z+this.p3.z)/3),this.D=-this.normal.x*this.position.x-this.normal.y*this.position.y-this.normal.z*this.position.z,this.box=(new THREE.Box3).setFromPoints([this.p1,this.p2,this.p3])},isPointAbove:function(t){var i=n.subtractVector(t,this.position);return n.dotProduct(i,this.normal)>0},isPointBelow:function(t){var i=n.subtractVector(t,this.position);return n.dotProduct(i,this.normal)<0},isPointAboveOrEqual:function(t){var i=n.subtractVector(t,this.position);return n.dotProduct(i,this.normal)>=-r.default.plane.dotBuffer},isPointBelowOrEqual:function(t){var i=n.subtractVector(t,this.position);return n.dotProduct(i,this.normal)<=r.default.plane.dotBuffer},isPointOnSurface:function(t){var i=n.subtractVector(t,this.position),e=n.dotProduct(i,this.normal);return e<=r.default.plane.dotBuffer&&e>=-r.default.plane.dotBuffer},isPlaneAbove:function(t){return this.isPointAboveOrEqual(t.p1)&&this.isPointAboveOrEqual(t.p2)&&this.isPointAboveOrEqual(t.p3)},containsPoint:function(t){return this.box.containsPoint(t)},containsBox:function(t){return this.box.containsBox(t)},intersectsBox:function(t){return this.box.intersectsBox(t)},containsPoint2D:function(t){return this.box.min.x<=t.x&&this.box.max.x>=t.x&&this.box.min.z<=t.z&&this.box.max.z>=t.z},containsPointPrecise2D:function(t){return n.dotProduct2({x:t.x-this.e1.centre.x,y:t.z-this.e1.centre.z},this.e1.norm2)<r.default.plane.dotBuffer&&n.dotProduct2({x:t.x-this.e2.centre.x,y:t.z-this.e2.centre.z},this.e2.norm2)<r.default.plane.dotBuffer&&n.dotProduct2({x:t.x-this.e3.centre.x,y:t.z-this.e3.centre.z},this.e3.norm2)<r.default.plane.dotBuffer},distanceToPlane:function(t){return Math.abs(this.normal.x*t.x+this.normal.y*t.y+this.normal.z*t.z+this.D)},getIntersect:function(t,i){var e=n.subtractVector(i,t),s=n.dotProduct(this.normal,n.normalise(e));if(Math.abs(s)<=r.default.plane.dotBuffer)return null;var o=this.normal.x*t.x+this.normal.y*t.y+this.normal.z*t.z+this.D,a=this.normal.x*e.x+this.normal.y*e.y+this.normal.z*e.z;if(0==a)return null;var h=t.x-e.x*o/a,l=t.y-e.y*o/a,c=t.z-e.z*o/a,u=new THREE.Vector3(h,l,c);if(this.containsPoint(u)){if((new THREE.Box3).setFromPoints([i,t]).expandByScalar(.05).containsPoint(u))return u}return null},getNormalIntersect:function(t){var i=n.addVector(t,this.normal),e=n.subtractVector(i,t),s=this.normal.x*t.x+this.normal.y*t.y+this.normal.z*t.z+this.D,o=this.normal.x*e.x+this.normal.y*e.y+this.normal.z*e.z,r=t.x-e.x*s/o,a=t.y-e.y*s/o,h=t.z-e.z*s/o;return new THREE.Vector3(r,a,h)},getNormalIntersect2D:function(t){var i=this.normal.x*t.x+this.normal.y*t.y+this.normal.z*t.z+this.D,e=this.normal.x*this.normal.x+this.normal.z*this.normal.z;return 0==e?null:new THREE.Vector3(t.x-this.normal.x*i/e,t.y,t.z-this.normal.z*i/e)},getY:function(t,i){return 0!=this.normal.y?(this.normal.x*t+this.normal.z*i+this.D)/-this.normal.y:null},getPerpendicularNormals:function(){return{right:new THREE.Vector3(-this.normal.z,0,this.normal.x),left:new THREE.Vector3(this.normal.z,0,-this.normal.x)}}},i.default=a},function(t,i,e){"use strict";Object.defineProperty(i,"__esModule",{value:!0});var s=e(1),n=function(t){if(t&&t.__esModule)return t;var i={};if(null!=t)for(var e in t)Object.prototype.hasOwnProperty.call(t,e)&&(i[e]=t[e]);return i.default=t,i}(s),o=function(t){this.point=new THREE.Vector3,this.position=t.position,this.rotation=t.rotation,this.scale=t.scale,this.rotationOrder=t.rotation.order.split(""),this.axis={x:new THREE.Vector3(1,0,0),y:new THREE.Vector3(0,1,0),z:new THREE.Vector3(0,0,1)},this.checkDefault()};o.prototype={set:function(t){this.point.x=t.x-this.position.x,this.point.y=t.y-this.position.y,this.point.z=t.z-this.position.z},getTransformedPoint:function(t){return{x:t.x-this.position.x,y:t.y-this.position.y,z:t.z-this.position.z}},reverseY:function(t){return t+this.position.y},reverse:function(t){return{x:t.x+this.position.x,y:t.y+this.position.y,z:t.z+this.position.z}},bakeRotation:function(t){for(var i=this.rotationOrder.length-1;i>-1;i-=1)"X"==this.rotationOrder[i]?(t.p1.applyAxisAngle(this.axis.x,this.rotation.x),t.p2.applyAxisAngle(this.axis.x,this.rotation.x),t.p3.applyAxisAngle(this.axis.x,this.rotation.x),t.n1.applyAxisAngle(this.axis.x,this.rotation.x),t.n2.applyAxisAngle(this.axis.x,this.rotation.x),t.n3.applyAxisAngle(this.axis.x,this.rotation.x)):"Y"==this.rotationOrder[i]?(t.p1.applyAxisAngle(this.axis.y,this.rotation.y),t.p2.applyAxisAngle(this.axis.y,this.rotation.y),t.p3.applyAxisAngle(this.axis.y,this.rotation.y),t.n1.applyAxisAngle(this.axis.y,this.rotation.y),t.n2.applyAxisAngle(this.axis.y,this.rotation.y),t.n3.applyAxisAngle(this.axis.y,this.rotation.y)):"Z"==this.rotationOrder[i]&&(t.p1.applyAxisAngle(this.axis.z,this.rotation.z),t.p2.applyAxisAngle(this.axis.z,this.rotation.z),t.p3.applyAxisAngle(this.axis.z,this.rotation.z),t.n1.applyAxisAngle(this.axis.z,this.rotation.z),t.n2.applyAxisAngle(this.axis.z,this.rotation.z),t.n3.applyAxisAngle(this.axis.z,this.rotation.z))},bakeScale:function(t){t.p1=n.scaleByVector(t.p1,this.scale),t.p2=n.scaleByVector(t.p2,this.scale),t.p3=n.scaleByVector(t.p3,this.scale)},checkDefault:function(){this.default={position:0==this.position.x&&0==this.position.y&&0==this.position.z,rotation:0==this.rotation.x&&0==this.rotation.y&&0==this.rotation.z,scale:1==this.scale.x&&1==this.scale.y&&1==this.scale.z}}},i.default=o},function(t,i,e){"use strict";function s(t){return t&&t.__esModule?t:{default:t}}Object.defineProperty(i,"__esModule",{value:!0});var n=e(0),o=s(n),r=e(8),a=s(r),h=function(){this.quadrants=new a.default,this.isColliderSystem=!0};h.prototype={add:function(){for(var t=0;t<arguments.length;t+=1){var i=arguments[t];if(!i.isColliderMesh)throw"Error: Input must be Collider.Mesh";i.planes.length<=o.default.system.maxPlanesPerMesh?this.quadrants.add(i):console.warn("Warning: Mesh not included - plane count exceeds maximum (%s).",o.default.system.maxPlanesPerMesh)}},getCollision:function(t){for(var i=!1,e=this.quadrants.getQuadrantMeshes(t),s=0;s<e.length;s+=1)if(e[s].getCollision(t)){i=!0;break}return i},getCollisionMeshes:function(t){for(var i=[],e=this.quadrants.getQuadrantMeshes(t),s=0;s<e.length;s+=1)e[s].getCollision(t)&&i.push(e[s]);return i},getCeilingPlane:function(t){for(var i=null,e=this.quadrants.getQuadrantMeshes(t),s=0;s<e.length;s+=1)if(e[s].getCollision(t)){var n=e[s].getCeilingPlane(t);null!=n&&(null===i||n.y>i.y)&&(i={y:n.y,plane:n.plane})}return null===i?null:i}},i.default=h},function(t,i,e){"use strict";Object.defineProperty(i,"__esModule",{value:!0});var s=e(0),n=function(t){return t&&t.__esModule?t:{default:t}}(s),o=function(){this.q=[]};o.prototype={positionToQuadrant:function(t){return{x:Math.floor(t.x/n.default.quadrants.size.x),y:Math.floor(t.y/n.default.quadrants.size.y),z:Math.floor(t.z/n.default.quadrants.size.z)}},add:function(t){for(var i=this.positionToQuadrant(t.min),e=this.positionToQuadrant(t.max),s=i.x;s<=e.x;s+=1)for(var n=i.y;n<=e.y;n+=1)for(var o=i.z;o<=e.z;o+=1)this.addToQuadrant(s,n,o,t)},addToQuadrant:function(t,i,e,s){this.q[t]||(this.q[t]=[]),this.q[t][i]||(this.q[t][i]=[]),this.q[t][i][e]||(this.q[t][i][e]=[]),this.q[t][i][e].push(s)},getQuadrantMeshes:function(t){var i=this.positionToQuadrant(t);return this.q[i.x]&&this.q[i.x][i.y]&&this.q[i.x][i.y][i.z]?this.q[i.x][i.y][i.z]:[]}},i.default=o},function(t,i,e){"use strict";function s(t){return t&&t.__esModule?t:{default:t}}Object.defineProperty(i,"__esModule",{value:!0});var n=e(1),o=function(t){if(t&&t.__esModule)return t;var i={};if(null!=t)for(var e in t)Object.prototype.hasOwnProperty.call(t,e)&&(i[e]=t[e]);return i.default=t,i}(n),r=e(10),a=s(r),h=e(0),l=s(h),c=function(t){this.domElement=t,this.config=l.default.sandbox.player,this.config.adjust=l.default.sandbox.adjust,this.config.physics=l.default.sandbox.physics,this.position=new THREE.Vector3(this.config.position.x,this.config.position.y,this.config.position.z),this.rotation={pitch:this.config.rotation.pitch,yaw:this.config.rotation.yaw,roll:this.config.rotation.roll},this.motion=new THREE.Vector3(0,0,0),this.offset={rotation:{pitch:0,yaw:0,roll:0}},this.target={position:new THREE.Vector3(this.config.position.x,this.config.position.y,this.config.position.z),rotation:{pitch:this.config.rotation.pitch,yaw:this.config.rotation.yaw,roll:this.config.rotation.roll},motion:new THREE.Vector3(0,0,0),offset:{rotation:{pitch:0,yaw:0,roll:0}}},this.falling=!1,this.fallTimer=0,this.camera=new THREE.PerspectiveCamera(l.default.sandbox.camera.fov,l.default.sandbox.camera.aspect,l.default.sandbox.camera.near,l.default.sandbox.camera.far),this.camera.up=new THREE.Vector3(0,1,0),this.interaction=new a.default(this.target.position,this.target.rotation,this.motion),this.init()};c.prototype={init:function(){this.object=new THREE.Group,this.objectLight=new THREE.PointLight(16777215,.25,100,2),this.objectLight.position.y=this.config.height/2,this.object.add(this.objectLight),this.bindControls(),this.resizeCamera()},update:function(t,i){this.handleInput(t),this.interaction.computeNextPosition(t,i),this.move()},handleInput:function(t){if(this.keys.left||this.keys.right){var i=(this.keys.left?1:0)+(this.keys.right?-1:0);this.target.rotation.yaw+=this.config.speed.rotation*t*i}if(this.keys.up||this.keys.down){var e=this.config.physics.noclip?this.config.speed.noclip:this.config.speed.normal,s=(this.keys.up?1:0)+(this.keys.down?-1:0),n=this.rotation.yaw+this.offset.rotation.yaw,o=Math.sin(n)*e*s,r=Math.cos(n)*e*s;this.target.motion.x=o,this.target.motion.z=r}else this.target.motion.x=0,this.target.motion.z=0;if(this.keys.jump&&(this.keys.jump=!1,(0==this.motion.y||this.fallTimer<this.config.speed.fallTimerThreshold)&&(this.motion.y=this.config.speed.jump,this.fallTimer=this.config.speed.fallTimerThreshold)),this.falling=0!=this.motion.y,this.fallTimer=this.falling?this.fallTimer+t:0,this.keys.x&&(this.keys.x=!1,this.config.physics.noclip=0==this.config.physics.noclip),this.config.physics.noclip){if(this.falling=!1,this.keys.up||this.keys.down){var a=(this.keys.up?1:0)+(this.keys.down?-1:0),h=this.target.rotation.pitch;this.target.motion.y=Math.sin(h)*this.config.speed.noclip*a}else this.target.motion.y=0;this.motion.y=this.target.motion.y}this.falling?(this.motion.x+=(this.target.motion.x-this.motion.x)*this.config.adjust.slow,this.motion.z+=(this.target.motion.z-this.motion.z)*this.config.adjust.slow):(this.motion.x=this.target.motion.x,this.motion.z=this.target.motion.z)},move:function(){this.position.x+=(this.target.position.x-this.position.x)*this.config.adjust.veryFast,this.position.y+=(this.target.position.y-this.position.y)*this.config.adjust.rapid,this.position.z+=(this.target.position.z-this.position.z)*this.config.adjust.veryFast,this.rotation.yaw+=o.minAngleDifference(this.rotation.yaw,this.target.rotation.yaw)*this.config.adjust.fast,this.offset.rotation.yaw+=(this.target.offset.rotation.yaw-this.offset.rotation.yaw)*this.config.adjust.normal,this.rotation.yaw+=this.rotation.yaw<0?o.twoPi:this.rotation.yaw>o.twoPi?-o.twoPi:0,this.rotation.pitch+=(this.target.rotation.pitch-this.rotation.pitch)*this.config.adjust.normal,this.offset.rotation.pitch+=(this.target.offset.rotation.pitch-this.offset.rotation.pitch)*this.config.adjust.normal,this.rotation.roll+=(this.target.rotation.roll-this.rotation.roll)*this.config.adjust.fast;var t=this.rotation.pitch+this.offset.rotation.pitch,i=this.rotation.yaw+this.offset.rotation.yaw,e=this.position.y+this.config.height;this.camera.up.z=-Math.sin(this.rotation.yaw)*this.rotation.roll,this.camera.up.x=Math.cos(this.rotation.yaw)*this.rotation.roll,this.camera.position.set(this.position.x-.25*Math.sin(i),e-.25*Math.sin(t),this.position.z-.25*Math.cos(i)),this.camera.lookAt(new THREE.Vector3(this.position.x+Math.sin(i),e+Math.sin(t),this.position.z+Math.cos(i))),this.object.position.set(this.position.x,this.position.y,this.position.z)},handleKeyDown:function(t){switch(t.keyCode){case 38:case 87:this.keys.up=!0;break;case 37:case 65:this.keys.left=!0;break;case 40:case 83:this.keys.down=!0;break;case 39:case 68:this.keys.right=!0;break;case 32:this.keys.jump=!0;break;case 88:this.keys.x=!0}},handleKeyUp:function(t){switch(t.keyCode){case 38:case 87:this.keys.up=!1;break;case 37:case 65:this.keys.left=!1;break;case 40:case 83:this.keys.down=!1;break;case 39:case 68:this.keys.right=!1}},handleMouseDown:function(t){if(!this.mouse.locked){var i=this.domElement.getBoundingClientRect();this.mouse.active=!0,this.mouse.rotation.pitch=this.rotation.pitch,this.mouse.rotation.yaw=this.rotation.yaw,this.mouse.start.x=t.clientX/this.domElement.width*2-1,this.mouse.start.y=(t.clientY-i.y)/this.domElement.height*2-1}},handleMouseMove:function(t){if(this.mouse.active&&!this.keys.left&&!this.keys.right){var i=this.domElement.getBoundingClientRect();this.mouse.x=t.clientX/this.domElement.width*2-1,this.mouse.y=(t.clientY-i.y)/this.domElement.height*2-1,this.mouse.delta.x=this.mouse.x-this.mouse.start.x,this.mouse.delta.y=this.mouse.y-this.mouse.start.y,this.target.rotation.yaw=this.mouse.rotation.yaw+this.mouse.delta.x;var e=this.mouse.rotation.pitch+this.mouse.delta.y;(e>this.config.rotation.maxPitch||e<this.config.rotation.minPitch)&&(e=Math.max(this.config.rotation.minPitch,Math.min(this.config.rotation.maxPitch,e)),this.mouse.start.y=this.mouse.y,this.mouse.rotation.pitch=e),this.target.rotation.pitch=e}},handleMouseUp:function(t){this.mouse.active=!1},resizeCamera:function(){var t=this.domElement.width,i=this.domElement.height;this.camera.aspect=t/i,this.camera.updateProjectionMatrix()},bindControls:function(){var t=this;t.keys={up:!1,down:!1,left:!1,right:!1,jump:!1,x:!1},t.mouse={x:0,y:0,start:{x:0,y:0},delta:{x:0,y:0},rotation:{pitch:0,yaw:0},locked:!1,active:!1},t.domElement.addEventListener("click",function(t){},!1),t.domElement.addEventListener("mousedown",function(i){t.handleMouseDown(i)},!1),t.domElement.addEventListener("mousemove",function(i){t.handleMouseMove(i)},!1),t.domElement.addEventListener("mouseup",function(i){t.handleMouseUp(i)},!1),t.domElement.addEventListener("mouseleave",function(i){t.handleMouseUp(i)},!1),document.addEventListener("keydown",function(i){t.handleKeyDown(i)},!1),document.addEventListener("keyup",function(i){t.handleKeyUp(i)},!1)}},i.default=c},function(t,i,e){"use strict";function s(t){return t&&t.__esModule?t:{default:t}}Object.defineProperty(i,"__esModule",{value:!0});var n=e(0),o=s(n),r=e(1),a=function(t){if(t&&t.__esModule)return t;var i={};if(null!=t)for(var e in t)Object.prototype.hasOwnProperty.call(t,e)&&(i[e]=t[e]);return i.default=t,i}(r),h=e(2),l=s(h),c=function(t,i,e){this.position=t,this.rotation=i,this.motion=e,this.falling=!1,this.config={},this.config.physics=o.default.sandbox.physics,this.logger=new l.default};c.prototype={applyPhysics:function(t){this.falling=this.motion.y<0,this.motion.y=Math.max(this.motion.y-this.config.physics.gravity*t,-this.config.physics.maxVelocity)},setPhysics:function(t){this.config.physics.gravity=t.gravity?t.gravity:this.config.physics.gravity,this.config.physics.floor=t.floor?t.floor:this.config.physics.floor,this.config.physics.snapUp=t.snapUp?t.snapUp:this.config.physics.snapUp,this.config.physics.snapDown=t.snapDown?t.snapDown:this.config.physics.snapDown},computeNextPosition:function(t,i){var e=a.addVector(this.position,a.scaleVector(this.motion,t));if(!this.config.physics.noclip){var s=i.getCollisionMeshes(e);if(this.applyPhysics(t),s.length>0)this.stepUpSlopes(e,s)&&(s=i.getCollisionMeshes(e)),this.testObstructions(e,s,i)&&(s=i.getCollisionMeshes(e),this.stepUpSlopes(e,s));else if(this.motion.y<0&&!this.falling){var n=a.copyVector(e);n.y-=this.config.physics.snapDown;var o=i.getCeilingPlane(n);this.stepDownSlope(e,o)}}this.position.x=e.x,this.position.y=e.y,this.position.z=e.z,this.position.y<this.config.physics.floor&&(this.motion.y=0,this.position.y=this.config.physics.floor),this.logger.print("M "+this.logger.formatVector(this.motion),"P "+this.logger.formatVector(this.position),"V "+this.logger.formatVector({x:this.rotation.pitch,y:this.rotation.yaw,z:this.rotation.roll}))},testObstructions:function(t,i,e){for(var s=!1,n=!1,o=0;o<i.length;o+=1){var r=i[o].getCeilingPlane(t);if(null!=r&&(r.plane.normal.y<this.config.physics.minSlope||r.y-this.position.y>this.config.physics.snapUp)){s=i[o];break}}if(s){var h=(a.copyVector(t),s.getIntersectPlane2D(this.position,t));if(null!=h){t.x=h.intersect.x,t.z=h.intersect.z;var l=0;i=e.getCollisionMeshes(t);for(var c=0;c<i.length;c+=1){var u=i[c].getCeilingPlane(t);null!=u&&(u.plane.normal.y<this.config.physics.minSlope||u.y-this.position.y>this.config.physics.snapUp)&&(l+=1)}l>1?(t.x=this.position.x,t.z=this.position.z):n=!0}else t.x=this.position.x,t.z=this.position.z}return n},stepUpSlopes:function(t,i){for(var e=!1,s=0;s<i.length;s+=1){var n=i[s].getCeilingPlane(t);null!=n&&n.plane.normal.y>=this.config.physics.minSlope&&n.y-this.position.y<=this.config.physics.snapUp&&n.y>=t.y&&(e=!0,t.y=n.y,this.motion.y=0)}return e},stepDownSlope:function(t,i){var e=!1;return null!=i&&i.plane.normal.y>=this.config.physics.minSlope&&(t.y=i.y,this.motion.y=0,e=!0),e}},i.default=c},function(t,i,e){"use strict";Object.defineProperty(i,"__esModule",{value:!0});var s=e(0),n=function(t){return t&&t.__esModule?t:{default:t}}(s),o=function(t){this.basePath=t,this.init()};o.prototype={init:function(){this.FBXLoader=new THREE.FBXLoader,this.envTextureCube=(new THREE.CubeTextureLoader).load([this.basePath+"envmap/horizontal.jpg",this.basePath+"envmap/horizontal.jpg",this.basePath+"envmap/posy.jpg",this.basePath+"envmap/negy.jpg",this.basePath+"envmap/horizontal.jpg",this.basePath+"envmap/horizontal.jpg"])},loadFBX:function(t){var i=this;return new Promise(function(e,s){try{i.FBXLoader.load(i.basePath+t,function(t){for(var s=[],n=0;n<t.children.length;n+=1)if("Mesh"==t.children[n].type)s.push(t.children[n]);else if("Group"==t.children[n].type)for(var o=0;o<t.children[n].children.length;o+=1)"Mesh"==t.children[n].children[o].type&&s.push(t.children[n].children[o]);for(var r=0;r<s.length;r+=1){var a=s[r].material;a.envMap=i.envTextureCube,a.envMapIntensity=.25,a.bumpScale=.01,a.normalScale=new THREE.Vector2(.1,.1)}e(s)})}catch(t){s(t)}})},process:function(t,i){for(var e=0;e<t.children.length;e+=1){var s=t.children[e],o=i.materialsInfo[s.material.name];if(s.material=i.materials[s.material.name],console.log(o,s.material),o.map_ka){var r=s.geometry.attributes.uv.array,a=o.map_ka,h=(new THREE.TextureLoader).load(self.basePath+a);s.material.lightMap=h,s.material.lightMapIntensity=n.default.Loader.lightMapIntensity,s.geometry.addAttribute("uv2",new THREE.BufferAttribute(r,2))}s.material.map&&(s.material.color=new THREE.Color(16777215),-1!==s.material.map.image.src.indexOf(".png")&&(s.material.transparent=!0,s.material.side=THREE.DoubleSide),-1!=s.material.map.image.src.indexOf("glass")&&(s.material.transparent=!0,s.material.opacity=n.default.Loader.glassOpacity))}},loadOBJ:function(t){var i=this;return new Promise(function(e,s){try{i.materialLoader.load(t+".mtl",function(s){s.preload(),i.objectLoader.load(t+".obj",function(t){i.process(t,s),e(t)})})}catch(t){s(t)}})}},i.default=o}]);