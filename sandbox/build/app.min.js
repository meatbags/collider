var clouds =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./js/main.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./js/config.js":
/*!**********************!*\
  !*** ./js/config.js ***!
  \**********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nconst Config = {\n  width: 960,\n  height: 540\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Config);\n\n//# sourceURL=webpack://clouds/./js/config.js?");

/***/ }),

/***/ "./js/lib/glsl/CopyShader.js":
/*!***********************************!*\
  !*** ./js/lib/glsl/CopyShader.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * Full-screen textured quad shader\r\n */\n\nTHREE.CopyShader = {\n\n\t\tuniforms: {\n\n\t\t\t\t\"tDiffuse\": { value: null },\n\t\t\t\t\"opacity\": { value: 1.0 }\n\n\t\t},\n\n\t\tvertexShader: [\"varying vec2 vUv;\", \"void main() {\", \"vUv = uv;\", \"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\", \"}\"].join(\"\\n\"),\n\n\t\tfragmentShader: [\"uniform float opacity;\", \"uniform sampler2D tDiffuse;\", \"varying vec2 vUv;\", \"void main() {\", \"vec4 texel = texture2D( tDiffuse, vUv );\", \"gl_FragColor = opacity * texel;\", \"}\"].join(\"\\n\")\n\n};\n\n//# sourceURL=webpack://clouds/./js/lib/glsl/CopyShader.js?");

/***/ }),

/***/ "./js/lib/glsl/EffectComposer.js":
/*!***************************************!*\
  !*** ./js/lib/glsl/EffectComposer.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\n\nTHREE.EffectComposer = function (renderer, renderTarget) {\n\n\tthis.renderer = renderer;\n\n\tif (renderTarget === undefined) {\n\n\t\tvar parameters = {\n\t\t\tminFilter: THREE.LinearFilter,\n\t\t\tmagFilter: THREE.LinearFilter,\n\t\t\tformat: THREE.RGBAFormat,\n\t\t\tstencilBuffer: false\n\t\t};\n\n\t\tvar size = renderer.getDrawingBufferSize(new THREE.Vector2());\n\t\trenderTarget = new THREE.WebGLRenderTarget(size.width, size.height, parameters);\n\t\trenderTarget.texture.name = 'EffectComposer.rt1';\n\t}\n\n\tthis.renderTarget1 = renderTarget;\n\tthis.renderTarget2 = renderTarget.clone();\n\tthis.renderTarget2.texture.name = 'EffectComposer.rt2';\n\n\tthis.writeBuffer = this.renderTarget1;\n\tthis.readBuffer = this.renderTarget2;\n\n\tthis.renderToScreen = true;\n\n\tthis.passes = [];\n\n\t// dependencies\n\n\tif (THREE.CopyShader === undefined) {\n\n\t\tconsole.error('THREE.EffectComposer relies on THREE.CopyShader');\n\t}\n\n\tif (THREE.ShaderPass === undefined) {\n\n\t\tconsole.error('THREE.EffectComposer relies on THREE.ShaderPass');\n\t}\n\n\tthis.copyPass = new THREE.ShaderPass(THREE.CopyShader);\n\n\tthis._previousFrameTime = Date.now();\n};\n\nObject.assign(THREE.EffectComposer.prototype, {\n\n\tswapBuffers: function () {\n\n\t\tvar tmp = this.readBuffer;\n\t\tthis.readBuffer = this.writeBuffer;\n\t\tthis.writeBuffer = tmp;\n\t},\n\n\taddPass: function (pass) {\n\n\t\tthis.passes.push(pass);\n\n\t\tvar size = this.renderer.getDrawingBufferSize(new THREE.Vector2());\n\t\tpass.setSize(size.width, size.height);\n\t},\n\n\tinsertPass: function (pass, index) {\n\n\t\tthis.passes.splice(index, 0, pass);\n\t},\n\n\tisLastEnabledPass: function (passIndex) {\n\n\t\tfor (var i = passIndex + 1; i < this.passes.length; i++) {\n\n\t\t\tif (this.passes[i].enabled) {\n\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t},\n\n\trender: function (deltaTime) {\n\n\t\t// deltaTime value is in seconds\n\n\t\tif (deltaTime === undefined) {\n\n\t\t\tdeltaTime = (Date.now() - this._previousFrameTime) * 0.001;\n\t\t}\n\n\t\tthis._previousFrameTime = Date.now();\n\n\t\tvar currentRenderTarget = this.renderer.getRenderTarget();\n\n\t\tvar maskActive = false;\n\n\t\tvar pass,\n\t\t    i,\n\t\t    il = this.passes.length;\n\n\t\tfor (i = 0; i < il; i++) {\n\n\t\t\tpass = this.passes[i];\n\n\t\t\tif (pass.enabled === false) continue;\n\n\t\t\tpass.renderToScreen = this.renderToScreen && this.isLastEnabledPass(i);\n\t\t\tpass.render(this.renderer, this.writeBuffer, this.readBuffer, deltaTime, maskActive);\n\n\t\t\tif (pass.needsSwap) {\n\n\t\t\t\tif (maskActive) {\n\n\t\t\t\t\tvar context = this.renderer.context;\n\n\t\t\t\t\tcontext.stencilFunc(context.NOTEQUAL, 1, 0xffffffff);\n\n\t\t\t\t\tthis.copyPass.render(this.renderer, this.writeBuffer, this.readBuffer, deltaTime);\n\n\t\t\t\t\tcontext.stencilFunc(context.EQUAL, 1, 0xffffffff);\n\t\t\t\t}\n\n\t\t\t\tthis.swapBuffers();\n\t\t\t}\n\n\t\t\tif (THREE.MaskPass !== undefined) {\n\n\t\t\t\tif (pass instanceof THREE.MaskPass) {\n\n\t\t\t\t\tmaskActive = true;\n\t\t\t\t} else if (pass instanceof THREE.ClearMaskPass) {\n\n\t\t\t\t\tmaskActive = false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.renderer.setRenderTarget(currentRenderTarget);\n\t},\n\n\treset: function (renderTarget) {\n\n\t\tif (renderTarget === undefined) {\n\n\t\t\tvar size = this.renderer.getDrawingBufferSize(new THREE.Vector2());\n\n\t\t\trenderTarget = this.renderTarget1.clone();\n\t\t\trenderTarget.setSize(size.width, size.height);\n\t\t}\n\n\t\tthis.renderTarget1.dispose();\n\t\tthis.renderTarget2.dispose();\n\t\tthis.renderTarget1 = renderTarget;\n\t\tthis.renderTarget2 = renderTarget.clone();\n\n\t\tthis.writeBuffer = this.renderTarget1;\n\t\tthis.readBuffer = this.renderTarget2;\n\t},\n\n\tsetSize: function (width, height) {\n\n\t\tthis.renderTarget1.setSize(width, height);\n\t\tthis.renderTarget2.setSize(width, height);\n\n\t\tfor (var i = 0; i < this.passes.length; i++) {\n\n\t\t\tthis.passes[i].setSize(width, height);\n\t\t}\n\t}\n\n});\n\nTHREE.Pass = function () {\n\n\t// if set to true, the pass is processed by the composer\n\tthis.enabled = true;\n\n\t// if set to true, the pass indicates to swap read and write buffer after rendering\n\tthis.needsSwap = true;\n\n\t// if set to true, the pass clears its buffer before rendering\n\tthis.clear = false;\n\n\t// if set to true, the result of the pass is rendered to screen. This is set automatically by EffectComposer.\n\tthis.renderToScreen = false;\n};\n\nObject.assign(THREE.Pass.prototype, {\n\n\tsetSize: function (width, height) {},\n\n\trender: function (renderer, writeBuffer, readBuffer, deltaTime, maskActive) {\n\n\t\tconsole.error('THREE.Pass: .render() must be implemented in derived pass.');\n\t}\n\n});\n\n// Helper for passes that need to fill the viewport with a single quad.\nTHREE.Pass.FullScreenQuad = function () {\n\n\tvar camera = new THREE.OrthographicCamera(-1, 1, 1, -1, 0, 1);\n\tvar geometry = new THREE.PlaneBufferGeometry(2, 2);\n\n\tvar FullScreenQuad = function (material) {\n\n\t\tthis._mesh = new THREE.Mesh(geometry, material);\n\t};\n\n\tObject.defineProperty(FullScreenQuad.prototype, 'material', {\n\n\t\tget: function () {\n\n\t\t\treturn this._mesh.material;\n\t\t},\n\n\t\tset: function (value) {\n\n\t\t\tthis._mesh.material = value;\n\t\t}\n\n\t});\n\n\tObject.assign(FullScreenQuad.prototype, {\n\n\t\trender: function (renderer) {\n\n\t\t\trenderer.render(this._mesh, camera);\n\t\t}\n\n\t});\n\n\treturn FullScreenQuad;\n}();\n\n//# sourceURL=webpack://clouds/./js/lib/glsl/EffectComposer.js?");

/***/ }),

/***/ "./js/lib/glsl/LuminosityHighPassShader.js":
/*!*************************************************!*\
  !*** ./js/lib/glsl/LuminosityHighPassShader.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\r\n * @author bhouston / http://clara.io/\r\n *\r\n * Luminosity\r\n * http://en.wikipedia.org/wiki/Luminosity\r\n */\n\nTHREE.LuminosityHighPassShader = {\n\n\t\tshaderID: \"luminosityHighPass\",\n\n\t\tuniforms: {\n\n\t\t\t\t\"tDiffuse\": { type: \"t\", value: null },\n\t\t\t\t\"luminosityThreshold\": { type: \"f\", value: 1.0 },\n\t\t\t\t\"smoothWidth\": { type: \"f\", value: 1.0 },\n\t\t\t\t\"defaultColor\": { type: \"c\", value: new THREE.Color(0x000000) },\n\t\t\t\t\"defaultOpacity\": { type: \"f\", value: 0.0 }\n\n\t\t},\n\n\t\tvertexShader: [\"varying vec2 vUv;\", \"void main() {\", \"vUv = uv;\", \"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\", \"}\"].join(\"\\n\"),\n\n\t\tfragmentShader: [\"uniform sampler2D tDiffuse;\", \"uniform vec3 defaultColor;\", \"uniform float defaultOpacity;\", \"uniform float luminosityThreshold;\", \"uniform float smoothWidth;\", \"varying vec2 vUv;\", \"void main() {\", \"vec4 texel = texture2D( tDiffuse, vUv );\", \"vec3 luma = vec3( 0.299, 0.587, 0.114 );\", \"float v = dot( texel.xyz, luma );\", \"vec4 outputColor = vec4( defaultColor.rgb, defaultOpacity );\", \"float alpha = smoothstep( luminosityThreshold, luminosityThreshold + smoothWidth, v );\", \"gl_FragColor = mix( outputColor, texel, alpha );\", \"}\"].join(\"\\n\")\n\n};\n\n//# sourceURL=webpack://clouds/./js/lib/glsl/LuminosityHighPassShader.js?");

/***/ }),

/***/ "./js/lib/glsl/RenderPass.js":
/*!***********************************!*\
  !*** ./js/lib/glsl/RenderPass.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\n\nTHREE.RenderPass = function (scene, camera, overrideMaterial, clearColor, clearAlpha) {\n\n\t\tTHREE.Pass.call(this);\n\n\t\tthis.scene = scene;\n\t\tthis.camera = camera;\n\n\t\tthis.overrideMaterial = overrideMaterial;\n\n\t\tthis.clearColor = clearColor;\n\t\tthis.clearAlpha = clearAlpha !== undefined ? clearAlpha : 0;\n\n\t\tthis.clear = true;\n\t\tthis.clearDepth = false;\n\t\tthis.needsSwap = false;\n};\n\nTHREE.RenderPass.prototype = Object.assign(Object.create(THREE.Pass.prototype), {\n\n\t\tconstructor: THREE.RenderPass,\n\n\t\trender: function (renderer, writeBuffer, readBuffer, deltaTime, maskActive) {\n\n\t\t\t\tvar oldAutoClear = renderer.autoClear;\n\t\t\t\trenderer.autoClear = false;\n\n\t\t\t\tthis.scene.overrideMaterial = this.overrideMaterial;\n\n\t\t\t\tvar oldClearColor, oldClearAlpha;\n\n\t\t\t\tif (this.clearColor) {\n\n\t\t\t\t\t\toldClearColor = renderer.getClearColor().getHex();\n\t\t\t\t\t\toldClearAlpha = renderer.getClearAlpha();\n\n\t\t\t\t\t\trenderer.setClearColor(this.clearColor, this.clearAlpha);\n\t\t\t\t}\n\n\t\t\t\tif (this.clearDepth) {\n\n\t\t\t\t\t\trenderer.clearDepth();\n\t\t\t\t}\n\n\t\t\t\trenderer.setRenderTarget(this.renderToScreen ? null : readBuffer);\n\n\t\t\t\t// TODO: Avoid using autoClear properties, see https://github.com/mrdoob/three.js/pull/15571#issuecomment-465669600\n\t\t\t\tif (this.clear) renderer.clear(renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil);\n\t\t\t\trenderer.render(this.scene, this.camera);\n\n\t\t\t\tif (this.clearColor) {\n\n\t\t\t\t\t\trenderer.setClearColor(oldClearColor, oldClearAlpha);\n\t\t\t\t}\n\n\t\t\t\tthis.scene.overrideMaterial = null;\n\t\t\t\trenderer.autoClear = oldAutoClear;\n\t\t}\n\n});\n\n//# sourceURL=webpack://clouds/./js/lib/glsl/RenderPass.js?");

/***/ }),

/***/ "./js/lib/glsl/ShaderPass.js":
/*!***********************************!*\
  !*** ./js/lib/glsl/ShaderPass.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\n\nTHREE.ShaderPass = function (shader, textureID) {\n\n\t\tTHREE.Pass.call(this);\n\n\t\tthis.textureID = textureID !== undefined ? textureID : \"tDiffuse\";\n\n\t\tif (shader instanceof THREE.ShaderMaterial) {\n\n\t\t\t\tthis.uniforms = shader.uniforms;\n\n\t\t\t\tthis.material = shader;\n\t\t} else if (shader) {\n\n\t\t\t\tthis.uniforms = THREE.UniformsUtils.clone(shader.uniforms);\n\n\t\t\t\tthis.material = new THREE.ShaderMaterial({\n\n\t\t\t\t\t\tdefines: Object.assign({}, shader.defines),\n\t\t\t\t\t\tuniforms: this.uniforms,\n\t\t\t\t\t\tvertexShader: shader.vertexShader,\n\t\t\t\t\t\tfragmentShader: shader.fragmentShader\n\n\t\t\t\t});\n\t\t}\n\n\t\tthis.fsQuad = new THREE.Pass.FullScreenQuad(this.material);\n};\n\nTHREE.ShaderPass.prototype = Object.assign(Object.create(THREE.Pass.prototype), {\n\n\t\tconstructor: THREE.ShaderPass,\n\n\t\trender: function (renderer, writeBuffer, readBuffer, deltaTime, maskActive) {\n\n\t\t\t\tif (this.uniforms[this.textureID]) {\n\n\t\t\t\t\t\tthis.uniforms[this.textureID].value = readBuffer.texture;\n\t\t\t\t}\n\n\t\t\t\tthis.fsQuad.material = this.material;\n\n\t\t\t\tif (this.renderToScreen) {\n\n\t\t\t\t\t\trenderer.setRenderTarget(null);\n\t\t\t\t\t\tthis.fsQuad.render(renderer);\n\t\t\t\t} else {\n\n\t\t\t\t\t\trenderer.setRenderTarget(writeBuffer);\n\t\t\t\t\t\t// TODO: Avoid using autoClear properties, see https://github.com/mrdoob/three.js/pull/15571#issuecomment-465669600\n\t\t\t\t\t\tif (this.clear) renderer.clear(renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil);\n\t\t\t\t\t\tthis.fsQuad.render(renderer);\n\t\t\t\t}\n\t\t}\n\n});\n\n//# sourceURL=webpack://clouds/./js/lib/glsl/ShaderPass.js?");

/***/ }),

/***/ "./js/lib/glsl/UnrealBloomPass.js":
/*!****************************************!*\
  !*** ./js/lib/glsl/UnrealBloomPass.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\r\n * @author spidersharma / http://eduperiment.com/\r\n *\r\n * Inspired from Unreal Engine\r\n * https://docs.unrealengine.com/latest/INT/Engine/Rendering/PostProcessEffects/Bloom/\r\n */\nTHREE.UnrealBloomPass = function (resolution, strength, radius, threshold) {\n\n\tTHREE.Pass.call(this);\n\n\tthis.strength = strength !== undefined ? strength : 1;\n\tthis.radius = radius;\n\tthis.threshold = threshold;\n\tthis.resolution = resolution !== undefined ? new THREE.Vector2(resolution.x, resolution.y) : new THREE.Vector2(256, 256);\n\n\t// create color only once here, reuse it later inside the render function\n\tthis.clearColor = new THREE.Color(0, 0, 0);\n\n\t// render targets\n\tvar pars = { minFilter: THREE.LinearFilter, magFilter: THREE.LinearFilter, format: THREE.RGBAFormat };\n\tthis.renderTargetsHorizontal = [];\n\tthis.renderTargetsVertical = [];\n\tthis.nMips = 5;\n\tvar resx = Math.round(this.resolution.x / 2);\n\tvar resy = Math.round(this.resolution.y / 2);\n\n\tthis.renderTargetBright = new THREE.WebGLRenderTarget(resx, resy, pars);\n\tthis.renderTargetBright.texture.name = \"UnrealBloomPass.bright\";\n\tthis.renderTargetBright.texture.generateMipmaps = false;\n\n\tfor (var i = 0; i < this.nMips; i++) {\n\n\t\tvar renderTargetHorizonal = new THREE.WebGLRenderTarget(resx, resy, pars);\n\n\t\trenderTargetHorizonal.texture.name = \"UnrealBloomPass.h\" + i;\n\t\trenderTargetHorizonal.texture.generateMipmaps = false;\n\n\t\tthis.renderTargetsHorizontal.push(renderTargetHorizonal);\n\n\t\tvar renderTargetVertical = new THREE.WebGLRenderTarget(resx, resy, pars);\n\n\t\trenderTargetVertical.texture.name = \"UnrealBloomPass.v\" + i;\n\t\trenderTargetVertical.texture.generateMipmaps = false;\n\n\t\tthis.renderTargetsVertical.push(renderTargetVertical);\n\n\t\tresx = Math.round(resx / 2);\n\n\t\tresy = Math.round(resy / 2);\n\t}\n\n\t// luminosity high pass material\n\n\tif (THREE.LuminosityHighPassShader === undefined) console.error(\"THREE.UnrealBloomPass relies on THREE.LuminosityHighPassShader\");\n\n\tvar highPassShader = THREE.LuminosityHighPassShader;\n\tthis.highPassUniforms = THREE.UniformsUtils.clone(highPassShader.uniforms);\n\n\tthis.highPassUniforms[\"luminosityThreshold\"].value = threshold;\n\tthis.highPassUniforms[\"smoothWidth\"].value = 0.01;\n\n\tthis.materialHighPassFilter = new THREE.ShaderMaterial({\n\t\tuniforms: this.highPassUniforms,\n\t\tvertexShader: highPassShader.vertexShader,\n\t\tfragmentShader: highPassShader.fragmentShader,\n\t\tdefines: {}\n\t});\n\n\t// Gaussian Blur Materials\n\tthis.separableBlurMaterials = [];\n\tvar kernelSizeArray = [3, 5, 7, 9, 11];\n\tvar resx = Math.round(this.resolution.x / 2);\n\tvar resy = Math.round(this.resolution.y / 2);\n\n\tfor (var i = 0; i < this.nMips; i++) {\n\n\t\tthis.separableBlurMaterials.push(this.getSeperableBlurMaterial(kernelSizeArray[i]));\n\n\t\tthis.separableBlurMaterials[i].uniforms[\"texSize\"].value = new THREE.Vector2(resx, resy);\n\n\t\tresx = Math.round(resx / 2);\n\n\t\tresy = Math.round(resy / 2);\n\t}\n\n\t// Composite material\n\tthis.compositeMaterial = this.getCompositeMaterial(this.nMips);\n\tthis.compositeMaterial.uniforms[\"blurTexture1\"].value = this.renderTargetsVertical[0].texture;\n\tthis.compositeMaterial.uniforms[\"blurTexture2\"].value = this.renderTargetsVertical[1].texture;\n\tthis.compositeMaterial.uniforms[\"blurTexture3\"].value = this.renderTargetsVertical[2].texture;\n\tthis.compositeMaterial.uniforms[\"blurTexture4\"].value = this.renderTargetsVertical[3].texture;\n\tthis.compositeMaterial.uniforms[\"blurTexture5\"].value = this.renderTargetsVertical[4].texture;\n\tthis.compositeMaterial.uniforms[\"bloomStrength\"].value = strength;\n\tthis.compositeMaterial.uniforms[\"bloomRadius\"].value = 0.1;\n\tthis.compositeMaterial.needsUpdate = true;\n\n\tvar bloomFactors = [1.0, 0.8, 0.6, 0.4, 0.2];\n\tthis.compositeMaterial.uniforms[\"bloomFactors\"].value = bloomFactors;\n\tthis.bloomTintColors = [new THREE.Vector3(1, 1, 1), new THREE.Vector3(1, 1, 1), new THREE.Vector3(1, 1, 1), new THREE.Vector3(1, 1, 1), new THREE.Vector3(1, 1, 1)];\n\tthis.compositeMaterial.uniforms[\"bloomTintColors\"].value = this.bloomTintColors;\n\n\t// copy material\n\tif (THREE.CopyShader === undefined) {\n\n\t\tconsole.error(\"THREE.BloomPass relies on THREE.CopyShader\");\n\t}\n\n\tvar copyShader = THREE.CopyShader;\n\n\tthis.copyUniforms = THREE.UniformsUtils.clone(copyShader.uniforms);\n\tthis.copyUniforms[\"opacity\"].value = 1.0;\n\n\tthis.materialCopy = new THREE.ShaderMaterial({\n\t\tuniforms: this.copyUniforms,\n\t\tvertexShader: copyShader.vertexShader,\n\t\tfragmentShader: copyShader.fragmentShader,\n\t\tblending: THREE.AdditiveBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false,\n\t\ttransparent: true\n\t});\n\n\tthis.enabled = true;\n\tthis.needsSwap = false;\n\n\tthis.oldClearColor = new THREE.Color();\n\tthis.oldClearAlpha = 1;\n\n\tthis.basic = new THREE.MeshBasicMaterial();\n\n\tthis.fsQuad = new THREE.Pass.FullScreenQuad(null);\n};\n\nTHREE.UnrealBloomPass.prototype = Object.assign(Object.create(THREE.Pass.prototype), {\n\n\tconstructor: THREE.UnrealBloomPass,\n\n\tdispose: function () {\n\n\t\tfor (var i = 0; i < this.renderTargetsHorizontal.length; i++) {\n\n\t\t\tthis.renderTargetsHorizontal[i].dispose();\n\t\t}\n\n\t\tfor (var i = 0; i < this.renderTargetsVertical.length; i++) {\n\n\t\t\tthis.renderTargetsVertical[i].dispose();\n\t\t}\n\n\t\tthis.renderTargetBright.dispose();\n\t},\n\n\tsetSize: function (width, height) {\n\n\t\tvar resx = Math.round(width / 2);\n\t\tvar resy = Math.round(height / 2);\n\n\t\tthis.renderTargetBright.setSize(resx, resy);\n\n\t\tfor (var i = 0; i < this.nMips; i++) {\n\n\t\t\tthis.renderTargetsHorizontal[i].setSize(resx, resy);\n\t\t\tthis.renderTargetsVertical[i].setSize(resx, resy);\n\n\t\t\tthis.separableBlurMaterials[i].uniforms[\"texSize\"].value = new THREE.Vector2(resx, resy);\n\n\t\t\tresx = Math.round(resx / 2);\n\t\t\tresy = Math.round(resy / 2);\n\t\t}\n\t},\n\n\trender: function (renderer, writeBuffer, readBuffer, deltaTime, maskActive) {\n\n\t\tthis.oldClearColor.copy(renderer.getClearColor());\n\t\tthis.oldClearAlpha = renderer.getClearAlpha();\n\t\tvar oldAutoClear = renderer.autoClear;\n\t\trenderer.autoClear = false;\n\n\t\trenderer.setClearColor(this.clearColor, 0);\n\n\t\tif (maskActive) renderer.context.disable(renderer.context.STENCIL_TEST);\n\n\t\t// Render input to screen\n\n\t\tif (this.renderToScreen) {\n\n\t\t\tthis.fsQuad.material = this.basic;\n\t\t\tthis.basic.map = readBuffer.texture;\n\n\t\t\trenderer.setRenderTarget(null);\n\t\t\trenderer.clear();\n\t\t\tthis.fsQuad.render(renderer);\n\t\t}\n\n\t\t// 1. Extract Bright Areas\n\n\t\tthis.highPassUniforms[\"tDiffuse\"].value = readBuffer.texture;\n\t\tthis.highPassUniforms[\"luminosityThreshold\"].value = this.threshold;\n\t\tthis.fsQuad.material = this.materialHighPassFilter;\n\n\t\trenderer.setRenderTarget(this.renderTargetBright);\n\t\trenderer.clear();\n\t\tthis.fsQuad.render(renderer);\n\n\t\t// 2. Blur All the mips progressively\n\n\t\tvar inputRenderTarget = this.renderTargetBright;\n\n\t\tfor (var i = 0; i < this.nMips; i++) {\n\n\t\t\tthis.fsQuad.material = this.separableBlurMaterials[i];\n\n\t\t\tthis.separableBlurMaterials[i].uniforms[\"colorTexture\"].value = inputRenderTarget.texture;\n\t\t\tthis.separableBlurMaterials[i].uniforms[\"direction\"].value = THREE.UnrealBloomPass.BlurDirectionX;\n\t\t\trenderer.setRenderTarget(this.renderTargetsHorizontal[i]);\n\t\t\trenderer.clear();\n\t\t\tthis.fsQuad.render(renderer);\n\n\t\t\tthis.separableBlurMaterials[i].uniforms[\"colorTexture\"].value = this.renderTargetsHorizontal[i].texture;\n\t\t\tthis.separableBlurMaterials[i].uniforms[\"direction\"].value = THREE.UnrealBloomPass.BlurDirectionY;\n\t\t\trenderer.setRenderTarget(this.renderTargetsVertical[i]);\n\t\t\trenderer.clear();\n\t\t\tthis.fsQuad.render(renderer);\n\n\t\t\tinputRenderTarget = this.renderTargetsVertical[i];\n\t\t}\n\n\t\t// Composite All the mips\n\n\t\tthis.fsQuad.material = this.compositeMaterial;\n\t\tthis.compositeMaterial.uniforms[\"bloomStrength\"].value = this.strength;\n\t\tthis.compositeMaterial.uniforms[\"bloomRadius\"].value = this.radius;\n\t\tthis.compositeMaterial.uniforms[\"bloomTintColors\"].value = this.bloomTintColors;\n\n\t\trenderer.setRenderTarget(this.renderTargetsHorizontal[0]);\n\t\trenderer.clear();\n\t\tthis.fsQuad.render(renderer);\n\n\t\t// Blend it additively over the input texture\n\n\t\tthis.fsQuad.material = this.materialCopy;\n\t\tthis.copyUniforms[\"tDiffuse\"].value = this.renderTargetsHorizontal[0].texture;\n\n\t\tif (maskActive) renderer.context.enable(renderer.context.STENCIL_TEST);\n\n\t\tif (this.renderToScreen) {\n\n\t\t\trenderer.setRenderTarget(null);\n\t\t\tthis.fsQuad.render(renderer);\n\t\t} else {\n\n\t\t\trenderer.setRenderTarget(readBuffer);\n\t\t\tthis.fsQuad.render(renderer);\n\t\t}\n\n\t\t// Restore renderer settings\n\n\t\trenderer.setClearColor(this.oldClearColor, this.oldClearAlpha);\n\t\trenderer.autoClear = oldAutoClear;\n\t},\n\n\tgetSeperableBlurMaterial: function (kernelRadius) {\n\n\t\treturn new THREE.ShaderMaterial({\n\n\t\t\tdefines: {\n\t\t\t\t\"KERNEL_RADIUS\": kernelRadius,\n\t\t\t\t\"SIGMA\": kernelRadius\n\t\t\t},\n\n\t\t\tuniforms: {\n\t\t\t\t\"colorTexture\": { value: null },\n\t\t\t\t\"texSize\": { value: new THREE.Vector2(0.5, 0.5) },\n\t\t\t\t\"direction\": { value: new THREE.Vector2(0.5, 0.5) }\n\t\t\t},\n\n\t\t\tvertexShader: \"varying vec2 vUv;\\n\\\r\n\t\t\t\tvoid main() {\\n\\\r\n\t\t\t\t\tvUv = uv;\\n\\\r\n\t\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n\\\r\n\t\t\t\t}\",\n\n\t\t\tfragmentShader: \"#include <common>\\\r\n\t\t\t\tvarying vec2 vUv;\\n\\\r\n\t\t\t\tuniform sampler2D colorTexture;\\n\\\r\n\t\t\t\tuniform vec2 texSize;\\\r\n\t\t\t\tuniform vec2 direction;\\\r\n\t\t\t\t\\\r\n\t\t\t\tfloat gaussianPdf(in float x, in float sigma) {\\\r\n\t\t\t\t\treturn 0.39894 * exp( -0.5 * x * x/( sigma * sigma))/sigma;\\\r\n\t\t\t\t}\\\r\n\t\t\t\tvoid main() {\\n\\\r\n\t\t\t\t\tvec2 invSize = 1.0 / texSize;\\\r\n\t\t\t\t\tfloat fSigma = float(SIGMA);\\\r\n\t\t\t\t\tfloat weightSum = gaussianPdf(0.0, fSigma);\\\r\n\t\t\t\t\tvec3 diffuseSum = texture2D( colorTexture, vUv).rgb * weightSum;\\\r\n\t\t\t\t\tfor( int i = 1; i < KERNEL_RADIUS; i ++ ) {\\\r\n\t\t\t\t\t\tfloat x = float(i);\\\r\n\t\t\t\t\t\tfloat w = gaussianPdf(x, fSigma);\\\r\n\t\t\t\t\t\tvec2 uvOffset = direction * invSize * x;\\\r\n\t\t\t\t\t\tvec3 sample1 = texture2D( colorTexture, vUv + uvOffset).rgb;\\\r\n\t\t\t\t\t\tvec3 sample2 = texture2D( colorTexture, vUv - uvOffset).rgb;\\\r\n\t\t\t\t\t\tdiffuseSum += (sample1 + sample2) * w;\\\r\n\t\t\t\t\t\tweightSum += 2.0 * w;\\\r\n\t\t\t\t\t}\\\r\n\t\t\t\t\tgl_FragColor = vec4(diffuseSum/weightSum, 1.0);\\n\\\r\n\t\t\t\t}\"\n\t\t});\n\t},\n\n\tgetCompositeMaterial: function (nMips) {\n\n\t\treturn new THREE.ShaderMaterial({\n\n\t\t\tdefines: {\n\t\t\t\t\"NUM_MIPS\": nMips\n\t\t\t},\n\n\t\t\tuniforms: {\n\t\t\t\t\"blurTexture1\": { value: null },\n\t\t\t\t\"blurTexture2\": { value: null },\n\t\t\t\t\"blurTexture3\": { value: null },\n\t\t\t\t\"blurTexture4\": { value: null },\n\t\t\t\t\"blurTexture5\": { value: null },\n\t\t\t\t\"dirtTexture\": { value: null },\n\t\t\t\t\"bloomStrength\": { value: 1.0 },\n\t\t\t\t\"bloomFactors\": { value: null },\n\t\t\t\t\"bloomTintColors\": { value: null },\n\t\t\t\t\"bloomRadius\": { value: 0.0 }\n\t\t\t},\n\n\t\t\tvertexShader: \"varying vec2 vUv;\\n\\\r\n\t\t\t\tvoid main() {\\n\\\r\n\t\t\t\t\tvUv = uv;\\n\\\r\n\t\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n\\\r\n\t\t\t\t}\",\n\n\t\t\tfragmentShader: \"varying vec2 vUv;\\\r\n\t\t\t\tuniform sampler2D blurTexture1;\\\r\n\t\t\t\tuniform sampler2D blurTexture2;\\\r\n\t\t\t\tuniform sampler2D blurTexture3;\\\r\n\t\t\t\tuniform sampler2D blurTexture4;\\\r\n\t\t\t\tuniform sampler2D blurTexture5;\\\r\n\t\t\t\tuniform sampler2D dirtTexture;\\\r\n\t\t\t\tuniform float bloomStrength;\\\r\n\t\t\t\tuniform float bloomRadius;\\\r\n\t\t\t\tuniform float bloomFactors[NUM_MIPS];\\\r\n\t\t\t\tuniform vec3 bloomTintColors[NUM_MIPS];\\\r\n\t\t\t\t\\\r\n\t\t\t\tfloat lerpBloomFactor(const in float factor) { \\\r\n\t\t\t\t\tfloat mirrorFactor = 1.2 - factor;\\\r\n\t\t\t\t\treturn mix(factor, mirrorFactor, bloomRadius);\\\r\n\t\t\t\t}\\\r\n\t\t\t\t\\\r\n\t\t\t\tvoid main() {\\\r\n\t\t\t\t\tgl_FragColor = bloomStrength * ( lerpBloomFactor(bloomFactors[0]) * vec4(bloomTintColors[0], 1.0) * texture2D(blurTexture1, vUv) + \\\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t lerpBloomFactor(bloomFactors[1]) * vec4(bloomTintColors[1], 1.0) * texture2D(blurTexture2, vUv) + \\\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t lerpBloomFactor(bloomFactors[2]) * vec4(bloomTintColors[2], 1.0) * texture2D(blurTexture3, vUv) + \\\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t lerpBloomFactor(bloomFactors[3]) * vec4(bloomTintColors[3], 1.0) * texture2D(blurTexture4, vUv) + \\\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t lerpBloomFactor(bloomFactors[4]) * vec4(bloomTintColors[4], 1.0) * texture2D(blurTexture5, vUv) );\\\r\n\t\t\t\t}\"\n\t\t});\n\t}\n\n});\n\nTHREE.UnrealBloomPass.BlurDirectionX = new THREE.Vector2(1.0, 0.0);\nTHREE.UnrealBloomPass.BlurDirectionY = new THREE.Vector2(0.0, 1.0);\n\n//# sourceURL=webpack://clouds/./js/lib/glsl/UnrealBloomPass.js?");

/***/ }),

/***/ "./js/lib/glsl/index.js":
/*!******************************!*\
  !*** ./js/lib/glsl/index.js ***!
  \******************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _CopyShader_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./CopyShader.js */ \"./js/lib/glsl/CopyShader.js\");\n/* harmony import */ var _CopyShader_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_CopyShader_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _EffectComposer_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./EffectComposer.js */ \"./js/lib/glsl/EffectComposer.js\");\n/* harmony import */ var _EffectComposer_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_EffectComposer_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _LuminosityHighPassShader_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./LuminosityHighPassShader.js */ \"./js/lib/glsl/LuminosityHighPassShader.js\");\n/* harmony import */ var _LuminosityHighPassShader_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_LuminosityHighPassShader_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _RenderPass_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./RenderPass.js */ \"./js/lib/glsl/RenderPass.js\");\n/* harmony import */ var _RenderPass_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_RenderPass_js__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _ShaderPass_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./ShaderPass.js */ \"./js/lib/glsl/ShaderPass.js\");\n/* harmony import */ var _ShaderPass_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_ShaderPass_js__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _UnrealBloomPass_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./UnrealBloomPass.js */ \"./js/lib/glsl/UnrealBloomPass.js\");\n/* harmony import */ var _UnrealBloomPass_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_UnrealBloomPass_js__WEBPACK_IMPORTED_MODULE_5__);\n\n\n\n\n\n\n//import './SkyShader.js';\n//import './Poster.js'\n\n//# sourceURL=webpack://clouds/./js/lib/glsl/index.js?");

/***/ }),

/***/ "./js/main.js":
/*!********************!*\
  !*** ./js/main.js ***!
  \********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _modules_logic__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./modules/logic */ \"./js/modules/logic.js\");\n/* harmony import */ var _modules_renderer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./modules/renderer */ \"./js/modules/renderer.js\");\n/* harmony import */ var _modules_control_surface__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./modules/control_surface */ \"./js/modules/control_surface.js\");\n/** App entry point. */\n\n\n\n\nclass App {\n  constructor() {\n    // init\n    this.logic = new _modules_logic__WEBPACK_IMPORTED_MODULE_0__[\"default\"]();\n    this.renderer = new _modules_renderer__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this);\n    this.controlSurface = new _modules_control_surface__WEBPACK_IMPORTED_MODULE_2__[\"default\"](this);\n\n    // timing\n    this.time = {\n      now: performance.now(),\n      maxDelta: 0.1\n    };\n\n    // run\n    this.active = true;\n    this.loop();\n  }\n\n  loop() {\n    requestAnimationFrame(() => {\n      this.loop();\n    });\n    if (this.active) {\n      const t = performance.now();\n      const delta = Math.min(this.time.maxDelta, (t - this.time.now) / 1000);\n      this.time.now = t;\n      this.logic.update(delta);\n      this.renderer.render(delta);\n    }\n  }\n}\n\nwindow.onload = () => {\n  const app = new App();\n};\n\n//# sourceURL=webpack://clouds/./js/main.js?");

/***/ }),

/***/ "./js/modules/camera.js":
/*!******************************!*\
  !*** ./js/modules/camera.js ***!
  \******************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/**\r\n ** Perspective first-person camera which tracks player.\r\n **/\n\nclass Camera {\n  constructor(root) {\n    this.root = root;\n    this.position = root.player.position;\n    this.rotation = root.player.rotation;\n    this.height = root.player.height;\n    //this.target = new THREE.Vector3();\n    this.fov = 65;\n    this.aspectRatio = this.root.width / this.root.height;\n    this.offset = 0.1;\n    this.camera = new THREE.PerspectiveCamera(this.fov, this.aspectRatio, 0.1, 2000000);\n    this.camera.up = new THREE.Vector3(0, 1, 0);\n    this.camera.rotation.order = 'YXZ';\n  }\n\n  resize(w, h) {\n    this.aspectRatio = this.root.width / this.root.height;\n    this.camera.aspect = this.aspectRatio;\n    this.camera.updateProjectionMatrix();\n  }\n\n  update(delta) {\n    const offsetXZ = this.offset - this.offset * Math.abs(Math.sin(this.rotation.y));\n    const offsetY = this.offset;\n    const y = this.position.y + this.height;\n    this.camera.position.set(this.position.x, this.position.y + this.height, this.position.z);\n    this.camera.rotation.y = this.rotation.x + Math.PI;\n    this.camera.rotation.x = this.rotation.y;\n  }\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Camera);\n\n//# sourceURL=webpack://clouds/./js/modules/camera.js?");

/***/ }),

/***/ "./js/modules/control_surface.js":
/*!***************************************!*\
  !*** ./js/modules/control_surface.js ***!
  \***************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _ui_mouse__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../ui/mouse */ \"./js/ui/mouse.js\");\n/* harmony import */ var _ui_keyboard__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ui/keyboard */ \"./js/ui/keyboard.js\");\n/* harmony import */ var _utils_maths__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/maths */ \"./js/utils/maths.js\");\n/** Control surface and player interface. Handles user input. */\n\n\n\n\n\nclass ControlSurface {\n  constructor(root) {\n    this.player = root.logic.player;\n    this.domElement = document.querySelector('#canvas-target');\n    this.centre = { x: 0, y: 0 };\n    this.resize();\n    this.rotation = new THREE.Vector2();\n    this.timestamp = null;\n    this.threshold = { click: 225, pan: 200, mouseDelta: 0.25 };\n    this.scaleRotation = { x: 1, y: 1 };\n\n    // events\n    this.keyboard = new _ui_keyboard__WEBPACK_IMPORTED_MODULE_1__[\"default\"](key => {\n      this.onKeyboard(key);\n    });\n    this.mouse = new _ui_mouse__WEBPACK_IMPORTED_MODULE_0__[\"default\"](this.domElement, e => {\n      this.onMouseDown(e);\n    }, e => {\n      this.onMouseMove(e);\n    }, e => {\n      this.onMouseUp(e);\n    }, this.isMobile);\n  }\n\n  processTouch(e) {\n    var x = 0;\n    var y = 0;\n    if (e.targetTouches && e.targetTouches.length) {\n      const rect = this.domElement.getBoundingClientRect();\n      const touch = e.targetTouches[0];\n      x = touch.pageX - rect.left;\n      y = touch.pageY - rect.top;\n    }\n    return { offsetX: x, offsetY: y };\n  }\n\n  onMouseDown(e) {\n    // record player rotation\n    this.rotation.y = this.player.rotation.y;\n    this.rotation.x = this.player.rotation.x;\n    this.timestamp = Date.now();\n    this.mouse.start(e);\n\n    // set cursor position mobile\n    if (this.isMobile) {\n      this.onMouseMove(e);\n    }\n  }\n\n  onMouseMove(e) {\n    this.mouse.move(e);\n\n    if (this.mouse.active) {\n      // update player rotation\n      if (!(this.player.keys.left || this.player.keys.right)) {\n        const yaw = this.rotation.x + this.mouse.delta.x / this.centre.x * this.scaleRotation.x;\n        const pitch = Object(_utils_maths__WEBPACK_IMPORTED_MODULE_2__[\"Clamp\"])(this.rotation.y + this.mouse.delta.y / this.centre.y * this.scaleRotation.y, this.player.minPitch, this.player.maxPitch);\n        if (pitch == this.player.minPitch || pitch == this.player.maxPitch) {\n          this.mouse.origin.y = e.offsetY;\n          this.rotation.y = pitch;\n        }\n        this.player.setRotation(pitch, yaw);\n      }\n    } else {\n      // mouse move\n    }\n  }\n\n  onMouseUp(e) {\n    this.mouse.stop();\n    if (Date.now() - this.timestamp < this.threshold.click && Math.hypot(this.mouse.delta.x, this.mouse.delta.y) < window.innerWidth * this.threshold.mouseDelta) {\n      // click !\n    }\n  }\n\n  onKeyboard(key) {\n    switch (key) {\n      case 'a':case 'A':case 'ArrowLeft':\n        this.player.keys.left = this.keyboard.keys[key];\n        break;\n      case 'd':case 'D':case 'ArrowRight':\n        this.player.keys.right = this.keyboard.keys[key];\n        break;\n      case 'w':case 'W':case 'ArrowUp':\n        this.player.keys.up = this.keyboard.keys[key];\n        break;\n      case 's':case 'S':case 'ArrowDown':\n        this.player.keys.down = this.keyboard.keys[key];\n        break;\n      case ' ':\n        this.player.keys.jump = this.keyboard.keys[key];\n        break;\n      default:\n        break;\n    }\n  }\n\n  resize() {\n    const rect = this.domElement.getBoundingClientRect();\n    this.centre.x = rect.width / 2;\n    this.centre.y = rect.height / 2;\n  }\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (ControlSurface);\n\n//# sourceURL=webpack://clouds/./js/modules/control_surface.js?");

/***/ }),

/***/ "./js/modules/logic.js":
/*!*****************************!*\
  !*** ./js/modules/logic.js ***!
  \*****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../config */ \"./js/config.js\");\n/* harmony import */ var _player__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./player */ \"./js/modules/player.js\");\n/* harmony import */ var _camera__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./camera */ \"./js/modules/camera.js\");\n/** Game logic. */\n\n\n\n\n\nclass Logic {\n  constructor() {\n    this.width = _config__WEBPACK_IMPORTED_MODULE_0__[\"default\"].width;\n    this.height = _config__WEBPACK_IMPORTED_MODULE_0__[\"default\"].height;\n    this.scene = new THREE.Scene();\n    this.collider = new Collider.System();\n    this.player = new _player__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this);\n    this.camera = new _camera__WEBPACK_IMPORTED_MODULE_2__[\"default\"](this);\n\n    // temp\n    const floor = new THREE.Mesh(new THREE.BoxBufferGeometry(50, 2, 50), new THREE.MeshPhysicalMaterial({ color: 0x888888 }));\n    const block = new THREE.Mesh(new THREE.BoxBufferGeometry(4, 2, 4), new THREE.MeshPhysicalMaterial({ color: 0x888888 }));\n    const ambient = new THREE.AmbientLight(0xffffff, 0.05);\n    const point = new THREE.PointLight(0xffffff, 1, 20, 2);\n    point.position.y = 10;\n    block.position.set(5, 2, 5);\n    this.scene.add(floor, block, ambient, point);\n\n    // collisions\n    this.collider.add(floor, block);\n  }\n\n  update(delta) {\n    this.player.update(delta);\n    this.camera.update(delta);\n  }\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Logic);\n\n//# sourceURL=webpack://clouds/./js/modules/logic.js?");

/***/ }),

/***/ "./js/modules/player.js":
/*!******************************!*\
  !*** ./js/modules/player.js ***!
  \******************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _utils_maths__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/maths */ \"./js/utils/maths.js\");\n/**\r\n ** Handle user input and move/ rotate player position.\r\n **/\n\n\n\nclass Player {\n  constructor(root) {\n    this.root = root;\n\n    // set position\n    this.position = new THREE.Vector3(0, 10, 0);\n    this.rotation = new THREE.Vector2();\n    this.motion = new THREE.Vector3();\n    this.target = {\n      position: this.position.clone(),\n      rotation: this.rotation.clone(),\n      motion: this.motion.clone()\n    };\n\n    // physics\n    this.collider = new Collider.Point({\n      position: this.target.position,\n      motion: this.motion\n      // gravity: 20\n    });\n\n    // physical attributes\n    this.speed = 6;\n    this.rotationSpeed = Math.PI * 0.5;\n    this.jump = 8;\n    this.jumpSpeedMultiplier = 0.25;\n    this.height = 3;\n    this.falling = false;\n    this.fallTime = 0;\n    this.fallTimeThreshold = 0.2;\n    this.minPitch = Math.PI * -0.125;\n    this.maxPitch = Math.PI * 0.125;\n    this.adjust = { slow: 0.05, normal: 0.1, fast: 0.125, maximum: 0.3 };\n    this.noclip = false;\n\n    // input\n    this.keys = { disabled: false };\n  }\n\n  move(delta) {\n    // key input to motion\n    if (this.keys.left || this.keys.right) {\n      const rot = (this.keys.left ? 1 : 0) + (this.keys.right ? -1 : 0);\n      this.target.rotation.x += rot * this.rotationSpeed * delta;\n    }\n\n    if (this.keys.up || this.keys.down) {\n      const speed = this.noclip ? this.noclipSpeed * (1 - Math.abs(Math.sin(this.target.rotation.y))) : this.speed;\n      const dir = (this.keys.up ? 1 : 0) + (this.keys.down ? -1 : 0);\n      this.target.motion.x = Math.sin(this.rotation.x) * speed * dir;\n      this.target.motion.z = Math.cos(this.rotation.x) * speed * dir;\n    } else {\n      this.target.motion.x = 0;\n      this.target.motion.z = 0;\n    }\n\n    if (this.keys.jump) {\n      if (this.motion.y == 0 || this.fallTime < this.fallTimeThreshold) {\n        this.motion.y = this.jump;\n        this.fallTime = this.fallTimeThreshold;\n      }\n    }\n\n    // decide if falling\n    this.falling = this.motion.y != 0;\n    this.fallTime = this.falling ? this.fallTime + delta : 0;\n\n    // noclip\n    if (this.noclip) {\n      this.falling = false;\n      if (this.keys.up || this.keys.down) {\n        const d = (this.keys.up ? 1 : 0) + (this.keys.down ? -1 : 0);\n        this.target.motion.y = Math.sin(this.target.rotation.y) * d * this.noclipSpeed;\n      } else {\n        this.target.motion.y = 0;\n      }\n      this.motion.y = this.target.motion.y;\n    }\n\n    // reduce speed if falling\n    if (!this.falling) {\n      this.motion.x = this.target.motion.x;\n      this.motion.z = this.target.motion.z;\n    } else {\n      this.motion.x = Object(_utils_maths__WEBPACK_IMPORTED_MODULE_0__[\"Blend\"])(this.motion.x, this.target.motion.x, this.jumpSpeedMultiplier);\n      this.motion.z = Object(_utils_maths__WEBPACK_IMPORTED_MODULE_0__[\"Blend\"])(this.motion.z, this.target.motion.z, this.jumpSpeedMultiplier);\n    }\n  }\n\n  setRotation(pitch, yaw) {\n    this.target.rotation.y = pitch;\n    this.target.rotation.x = yaw;\n  }\n\n  update(delta) {\n    // move\n    if (!this.keys.disabled) {\n      this.move(delta);\n      if (!this.noclip) {\n        this.collider.move(delta, this.root.collider);\n      } else {\n        this.target.position.x += this.motion.x * delta;\n        this.target.position.y += this.motion.y * delta;\n        this.target.position.z += this.motion.z * delta;\n      }\n      this.position.x = Object(_utils_maths__WEBPACK_IMPORTED_MODULE_0__[\"Blend\"])(this.position.x, this.target.position.x, this.adjust.maximum);\n      this.position.y = Object(_utils_maths__WEBPACK_IMPORTED_MODULE_0__[\"Blend\"])(this.position.y, this.target.position.y, this.adjust.maximum);\n      this.position.z = Object(_utils_maths__WEBPACK_IMPORTED_MODULE_0__[\"Blend\"])(this.position.z, this.target.position.z, this.adjust.maximum);\n    }\n\n    // rotate\n    this.rotation.x += Object(_utils_maths__WEBPACK_IMPORTED_MODULE_0__[\"MinAngleBetween\"])(this.rotation.x, this.target.rotation.x) * this.adjust.normal;\n    this.rotation.y = Object(_utils_maths__WEBPACK_IMPORTED_MODULE_0__[\"Blend\"])(this.rotation.y, this.target.rotation.y, this.adjust.normal);\n  }\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Player);\n\n//# sourceURL=webpack://clouds/./js/modules/player.js?");

/***/ }),

/***/ "./js/modules/renderer.js":
/*!********************************!*\
  !*** ./js/modules/renderer.js ***!
  \********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _lib_glsl__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../lib/glsl */ \"./js/lib/glsl/index.js\");\n/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../config */ \"./js/config.js\");\n/** WebGL Renderer */\n\n\n\n\nclass Renderer {\n  constructor(root) {\n    this.root = root;\n\n    // three.js setup\n    this.renderer = new THREE.WebGLRenderer({});\n    this.renderer.setClearColor(0x0, 1);\n    this.renderer.gammaInput = true;\n    this.renderer.gammaOutput = true;\n    this.renderer.gammaFactor = 2;\n    this.width = _config__WEBPACK_IMPORTED_MODULE_1__[\"default\"].width;\n    this.height = _config__WEBPACK_IMPORTED_MODULE_1__[\"default\"].height;\n    this.size = new THREE.Vector2(this.width, this.height);\n\n    // render passes\n    const strength = 0.5;\n    const radius = 0.125;\n    const threshold = 0.96;\n    this.passRender = new THREE.RenderPass(root.logic.scene, root.logic.camera.camera);\n    //this.passPoster = new THREE.PosterPass(this.size);\n    this.passBloom = new THREE.UnrealBloomPass(this.size, strength, radius, threshold);\n    this.passBloom.renderToScreen = true;\n\n    // composer\n    this.composer = new THREE.EffectComposer(this.renderer);\n    this.composer.addPass(this.passRender);\n    //this.composer.addPass(this.passPoster);\n    this.composer.addPass(this.passBloom);\n\n    // add to dom\n    this.resize();\n    document.querySelector('#canvas-target').appendChild(this.renderer.domElement);\n  }\n\n  resize() {\n    this.width = _config__WEBPACK_IMPORTED_MODULE_1__[\"default\"].width;\n    this.height = _config__WEBPACK_IMPORTED_MODULE_1__[\"default\"].height;\n    this.size.x = this.width;\n    this.size.y = this.height;\n    this.renderer.setSize(this.width, this.height);\n    this.composer.setSize(this.width, this.height);\n    this.passBloom.setSize(this.width, this.height);\n  }\n\n  render(delta) {\n    this.composer.render(delta);\n  }\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Renderer);\n\n//# sourceURL=webpack://clouds/./js/modules/renderer.js?");

/***/ }),

/***/ "./js/ui/keyboard.js":
/*!***************************!*\
  !*** ./js/ui/keyboard.js ***!
  \***************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/** Keyboard interface.  */\n\nclass Keyboard {\n  constructor(onEvent) {\n    this.keys = {};\n    this.onEvent = onEvent;\n    document.addEventListener('keydown', key => {\n      this.onKeyDown(key);\n    });\n    document.addEventListener('keyup', key => {\n      this.onKeyUp(key);\n    });\n  }\n\n  onKeyDown(key) {\n    this.keys[key.key] = true;\n    this.onEvent(key.key);\n  }\n\n  onKeyUp(key) {\n    this.keys[key.key] = false;\n    this.onEvent(key.key);\n  }\n\n  release(key) {\n    this.keys[key] = false;\n  }\n\n  isSpecial() {\n    return this.keys['Shift'] || this.keys['Control'] || this.keys['Alt'];\n  }\n\n  isControl() {\n    return this.keys['Control'];\n  }\n\n  isShift() {\n    return this.keys['Shift'];\n  }\n\n  isAlt() {\n    return this.keys['Alt'];\n  }\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Keyboard);\n\n//# sourceURL=webpack://clouds/./js/ui/keyboard.js?");

/***/ }),

/***/ "./js/ui/mouse.js":
/*!************************!*\
  !*** ./js/ui/mouse.js ***!
  \************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/** Mouse interface. */\n\nclass Mouse {\n  constructor(domElement, onDown, onMove, onUp, isMobile) {\n    this.x = 0;\n    this.y = 0;\n    this.origin = { x: 0, y: 0 };\n    this.delta = { x: 0, y: 0 };\n    this.active = false;\n    this.domElement = domElement;\n\n    if (!isMobile) {\n      this.domElement.addEventListener('mousedown', onDown, false);\n      this.domElement.addEventListener('mousemove', onMove, false);\n      this.domElement.addEventListener('mouseup', onUp, false);\n      this.domElement.addEventListener('mouseleave', onUp, false);\n    } else {\n      this.domElement.addEventListener('touchstart', onDown, false);\n      this.domElement.addEventListener('touchmove', onMove, false);\n      this.domElement.addEventListener('touchend', onUp, false);\n    }\n\n    // universal\n    this.domElement.addEventListener('click', evt => {\n      onMove(evt);\n      onUp(evt);\n    }, false);\n  }\n\n  start(e) {\n    this.active = true;\n    this.origin.x = e.offsetX;\n    this.origin.y = e.offsetY;\n  }\n\n  move(e) {\n    this.x = e.offsetX;\n    this.y = e.offsetY;\n    this.delta.x = this.x - this.origin.x;\n    this.delta.y = this.y - this.origin.y;\n  }\n\n  stop() {\n    this.active = false;\n  }\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Mouse);\n\n//# sourceURL=webpack://clouds/./js/ui/mouse.js?");

/***/ }),

/***/ "./js/utils/maths.js":
/*!***************************!*\
  !*** ./js/utils/maths.js ***!
  \***************************/
/*! exports provided: Blend, Clamp, MinAngleBetween */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Blend\", function() { return Blend; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Clamp\", function() { return Clamp; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MinAngleBetween\", function() { return MinAngleBetween; });\n/** Useful maths. */\n\nconst Blend = (a, b, factor) => {\n  return (b - a) * factor + a;\n};\n\nconst MinAngleBetween = function (a1, a2) {\n  return Math.atan2(Math.sin(a2 - a1), Math.cos(a2 - a1));\n};\n\nconst Clamp = (value, min, max) => {\n  return Math.min(max, Math.max(min, value));\n};\n\n\n\n//# sourceURL=webpack://clouds/./js/utils/maths.js?");

/***/ })

/******/ });